[{"/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/index.js":"1","/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/App.js":"2","/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/NftMarket.js":"3","/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/Navbar.js":"4","/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/Login.js":"5","/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/Auction.js":"6","/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/Nft.js":"7","/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/reportWebVitals.js":"8","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/index.js":"9","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/reportWebVitals.js":"10","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/App.js":"11","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Login.js":"12","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Navbar.js":"13","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Auction.js":"14","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Nft.js":"15","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/NftForm.js":"16","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/OngoingAuction.js":"17","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/NftMarketplace.js":"18","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Bidders.js":"19","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/BidForm.js":"20","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/CountdownTimer.js":"21","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Timer.js":"22"},{"size":575,"mtime":1626526264752,"results":"23","hashOfConfig":"24"},{"size":1214,"mtime":1626525625959,"results":"25","hashOfConfig":"24"},{"size":4358,"mtime":1626525778557,"results":"26","hashOfConfig":"24"},{"size":1053,"mtime":1626507311042,"results":"27","hashOfConfig":"24"},{"size":2516,"mtime":1625817280493,"results":"28","hashOfConfig":"24"},{"size":4755,"mtime":1626525287234,"results":"29","hashOfConfig":"24"},{"size":1082,"mtime":1625816733632,"results":"30","hashOfConfig":"24"},{"size":362,"mtime":1621976073473,"results":"31","hashOfConfig":"24"},{"size":575,"mtime":1626526264752,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1621976073473,"results":"34","hashOfConfig":"33"},{"size":1302,"mtime":1627890811986,"results":"35","hashOfConfig":"33"},{"size":2462,"mtime":1628622438314,"results":"36","hashOfConfig":"33"},{"size":1128,"mtime":1628622979258,"results":"37","hashOfConfig":"33"},{"size":5391,"mtime":1629099158514,"results":"38","hashOfConfig":"33"},{"size":833,"mtime":1628970408256,"results":"39","hashOfConfig":"33"},{"size":225,"mtime":1626684374185,"results":"40","hashOfConfig":"33"},{"size":14590,"mtime":1629098826368,"results":"41","hashOfConfig":"33"},{"size":10718,"mtime":1629274613057,"results":"42","hashOfConfig":"33"},{"size":412,"mtime":1628968820676,"results":"43","hashOfConfig":"33"},{"size":1417,"mtime":1628968722738,"results":"44","hashOfConfig":"33"},{"size":1109,"mtime":1627246608994,"results":"45","hashOfConfig":"33"},{"size":2930,"mtime":1629047126704,"results":"46","hashOfConfig":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ngx0ak",{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"fdeiea",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},"/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/index.js",[],"/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/App.js",["96","97","98","99"],"/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/NftMarket.js",["100","101","102","103","104","105","106","107","108","109","110","111"],"/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/Navbar.js",["112","113"],"/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/Login.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/Auction.js",["130","131","132"],"/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/Nft.js",["133"],"/Users/mauriziocapone/Desktop/Progetto/nftmarketplace/src/components/reportWebVitals.js",[],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/index.js",[],["134","135"],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/reportWebVitals.js",[],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/App.js",[],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Login.js",[],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Navbar.js",["136","137"],"import React, { Component } from 'react'\nimport Web3 from 'web3'\n\nclass Navbar extends Component {\n\n  async componentDidMount() {\n    await this.loadWeb3()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected.')\n    }\n  }\n\n  logout(event) {\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark shadow-sm\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\"> Account : {this.props.address} </a>\n          <a className=\"navbar-brand\">Balance : {this.props.balance} MCT</a>\n          <button onClick={this.props.getAuctions} className=\"btn btn-primary\" type=\"submit\">Ongoing Auctions</button>\n          <form className=\"d-flex\">\n          <button onClick={()=>this.props.logoutUser()} className=\"btn btn-outline-success\" type=\"submit\">Logout</button>\n          </form>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Auction.js",[],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Nft.js",[],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/NftForm.js",[],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/OngoingAuction.js",["138"],"import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport Navbar from './Navbar'\nimport Nft from './Nft'\nimport Timer from './Timer'\n\nimport NftMarket from '../abis/NftMarket.json'\nimport Auction from '../abis/AuctionToken.json'\nimport Bidders from './Bidders'\nimport BidForm from './BidForm'\n\nimport HulkErc721 from '../abis/HulkErc721.json'\nimport SupermanErc721 from '../abis/SupermanErc721.json'\nimport DeadpoolErc721 from '../abis/DeadpoolErc721.json'\nimport JohnWickErc721 from '../abis/JohnWickErc721.json'\n\nclass OngoingAuction extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contractAddress: '0x0',\n            userAccount: '0x0',\n            metadata: [],\n            startingBid: '0',\n            auctionTime: '0',\n            bid: '',\n            auctionBids: [],\n            timer: false,\n            join: false,\n            owner: false,\n            loading: true\n        }\n        this.handleAuctionPrice = this.handleAuctionPrice.bind(this);\n        this.handleAuctionForm = this.handleAuctionForm.bind(this);\n        this.withdraw = this.withdraw.bind(this);\n        this.getWinBid = this.getWinBid.bind(this);\n        this.joinAuction = this.joinAuction.bind(this);\n        this.endAuction = this.endAuction.bind(this);\n        this.getBidders = this.getBidders.bind(this);\n        this.logoutUser = this.logoutUser.bind(this);\n    }\n    async componentDidMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadBlockchainData() {\n\n        const web3 = window.web3\n        const networkId = await web3.eth.net.getId()\n        const address = localStorage.getItem('address');\n        this.setState({ userAccount: address })\n\n        // Load AuctionData\n\n        const marketData = NftMarket.networks[networkId]\n        this.setState({ contractAddress: marketData.address })\n        if (marketData) {\n            const nftMarket = new web3.eth.Contract(NftMarket.abi, marketData.address)\n            this.setState({ nftMarket })\n            let startingBid = await nftMarket.methods.startingBid().call()\n            this.setState({ startingBid })\n            let highestBid = await nftMarket.methods.highestBid().call()\n            this.setState({ highestBid })\n            let highestBidder = await nftMarket.methods.highestBidder().call()\n            this.setState({ highestBidder })\n            let refund = await nftMarket.methods.pendingReturns(this.state.userAccount).call()\n            this.setState({ refund })\n            let erc721 = await nftMarket.methods.erc721Contract().call()\n            let auctionOwner = await nftMarket.methods.auction_owner().call()\n            this.setState({ auctionOwner })\n\n            if (this.state.userAccount === this.state.auctionOwner) {\n                this.setState({ owner: true })\n            }\n            // fare il mint con il link del fetch -> improve\n\n            if (erc721 === \"0x6A9A5EcaCC11102b6668a3c6c4733f947ba63229\") { // superman\n                const superman = SupermanErc721.networks[networkId]\n                const erc721Addr = new web3.eth.Contract(SupermanErc721.abi, superman.address)\n                this.setState({ erc721Addr })\n                // salvo l'owner del contratto\n                let nftOwner = await erc721Addr.methods.ownerOf(1).call()\n                this.setState({ nftOwner })\n\n                const smResponse = await fetch(\"https://my-json-server.typicode.com/MauriC94/NftMarketplace/tokens/2\");\n\n                if (!smResponse.ok)\n                    throw new Error(smResponse.statusText);\n\n                const smJson = await smResponse.json();\n                this.state.metadata.push({ id: 2, name: smJson.name, description: smJson.description, image: smJson.image });\n\n            } else if (erc721 === \"0x2015cE0A7De265B46E9c3B6D28277B16760A7fF1\") { // hulk\n                const hulk = HulkErc721.networks[networkId]\n                const erc721Addr = new web3.eth.Contract(HulkErc721.abi, hulk.address)\n                this.setState({ erc721Addr })\n                const hkResponse = await fetch(\"https://my-json-server.typicode.com/MauriC94/NftMarketplace/tokens/1\");\n\n                if (!hkResponse.ok)\n                    throw new Error(hkResponse.statusText);\n\n                const hkJson = await hkResponse.json();\n                this.state.metadata.push({ id: 2, name: hkJson.name, description: hkJson.description, image: hkJson.image });\n\n            } else if (erc721 === \"0x9624c62F134844D3f648d474Ea7Cb2b97a1Da05F\") { // deadpool\n                const deadpool = DeadpoolErc721.networks[networkId]\n                const erc721Addr = new web3.eth.Contract(DeadpoolErc721.abi, deadpool.address)\n                this.setState({ erc721Addr })\n                const dpResponse = await fetch(\"https://my-json-server.typicode.com/MauriC94/NftMarketplace/tokens/0\");\n\n                if (!dpResponse.ok)\n                    throw new Error(dpResponse.statusText);\n\n                const dpJson = await dpResponse.json();\n                this.state.metadata.push({ id: 0, name: dpJson.name, description: dpJson.description, image: dpJson.image });\n\n            } else if (erc721 === \"0x957E125026a9D29C9633922edf31d581D665909f\") { // johnwick\n                const johnwick = JohnWickErc721.networks[networkId]\n                const erc721Addr = new web3.eth.Contract(JohnWickErc721.abi, johnwick.address)\n                this.setState({ erc721Addr })\n                const jwResponse = await fetch(\"https://my-json-server.typicode.com/MauriC94/NftMarketplace/tokens/3\");\n\n                if (!jwResponse.ok)\n                    throw new Error(jwResponse.statusText);\n\n                const jwJson = await jwResponse.json();\n                this.state.metadata.push({ id: 0, name: jwJson.name, description: jwJson.description, image: jwJson.image });\n\n            }\n        } else {\n            window.alert('NftMarket contract not deployed to detected network')\n        }\n\n        // Load TokenAuction\n        const tokenData = Auction.networks[networkId]\n\n        if (tokenData) {\n            const tokenErc20 = new web3.eth.Contract(Auction.abi, tokenData.address)\n            this.setState({ tokenErc20 })\n            const balance = await tokenErc20.methods.balanceOf(this.state.userAccount).call()\n            this.setState({ balance })\n\n        } else {\n            window.alert('Auction contract not deployed to detected network')\n        }\n\n        // Load Bid\n\n        if (this.state.nftMarket.methods.checkBidder(this.state.userAccount).call()) {\n            this.setState({ join: true })\n        }\n\n        this.getBidders()\n        this.setState({ loading: false })\n\n        // Load Refund\n\n        this.getRefunds()\n    }\n\n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected.')\n        }\n    }\n\n    async handleAuctionPrice(e) {\n        e.preventDefault();\n        const value = await e.target.value;\n        this.setState({ bid: value });\n    }\n\n    handleAuctionForm(e) {\n        e.preventDefault();\n        this.setState({ loading: true })\n        if (this.state.join == false) {\n            alert(\"You have to JOIN the Auction first!\");\n        } else {\n            this.state.tokenErc20.methods.approve(this.state.contractAddress, this.state.bid).send({ from: this.state.userAccount }).on('transactionHash', (hash) => {\n                this.state.nftMarket.methods.bid(this.state.bid).send({ from: this.state.userAccount }).on('transactionHash', (hash) => {\n                })\n            })\n            this.setState({ auctionBids: this.state.bid })\n            this.setState({ loading: false })\n        }\n    }\n\n    async getBidders() {\n        const size = await this.state.nftMarket.methods.biddersCount().call();\n        const newArray = this.state.auctionBids.slice();\n\n        for (var i = 0; i < size; i++) {\n            let user = await this.state.nftMarket.methods.bidders(i).call();\n            const result = await this.state.nftMarket.methods.bids(user).call();\n            const data = ({ 'id': i, 'bidder': user, 'bidAmount': result });\n            newArray.push(data);\n        }\n        this.setState({ auctionBids: newArray });\n    }\n\n    async getRefunds() {\n        const user = this.state.userAccount;\n        const refund = await this.state.nftMarket.methods.pendingReturns(user).call();\n        this.setState({ refund })\n    }\n\n    withdraw(e) {\n        this.setState({ loading: true })\n        this.state.tokenErc20.methods.approve(this.state.contractAddress, this.state.refund).send({ from: this.state.userAccount }).on('transactionHash', (hash) => {\n            this.state.nftMarket.methods.withdraw().send({ from: this.state.userAccount }).on('transactionHash', (hash) => {\n            })\n        })\n        this.setState({ loading: false })\n    }\n\n    getWinBid(e) {\n        this.setState({ loading: true })\n        this.state.tokenErc20.methods.approve(this.state.contractAddress, this.state.highestBid).send({ from: this.state.userAccount }).on('transactionHash', (hash) => {\n            this.state.nftMarket.methods.getWin().send({ from: this.state.userAccount }).on('transactionHash', (hash) => {\n            })\n        })\n        this.setState({ loading: false })\n\n    }\n\n    handleTimerOver = async () => {\n        this.setState({ timer: true })\n        const winner = await this.state.nftMarket.methods.highestBidder().call();\n        this.setState({ highestBidder: winner })\n    };\n\n    joinAuction = async () => {\n        this.setState({ loading: true })\n        this.setState({ join: true });\n        this.state.nftMarket.methods.addBidder().send({ from: this.state.userAccount }).on('transactionHash', (hash) => {\n        })\n        this.setState({ loading: false })\n    };\n\n    logoutUser() {\n        this.props.history.push('/');\n        localStorage.clear();\n    }\n\n    endAuction() {\n        this.setState({ loading: true })\n        this.state.erc721Addr.methods.approve(this.state.contractAddress, 1).send({ from: this.state.nftOwner }).on('transactionHash', (hash) => {\n            this.state.nftMarket.methods.auctionEnd().send({ from: this.state.userAccount }).on('transactionHash', (hash) => {\n            })\n        })\n        this.setState({ loading: false })\n\n    }\n\n    render() {\n        let content\n        if (!this.state.owner) {\n            content = <div className=\"container\">\n                <div className=\"card-body\">\n                    <h3>\n                        {this.state.timer ? \" \" : \"Make your Bid!\"}\n                    </h3>\n                </div>\n                <BidForm\n                    handleAuctionPrice={this.handleAuctionPrice}\n                    handleAuctionForm={this.handleAuctionForm}\n                />\n            </div>\n        }\n        let win\n        if (this.state.owner && this.state.timer) {\n            win = <div className=\"container\" style={{ marginTop: '20px' }}>\n                <button onClick={this.getWinBid} type=\"button\" class=\"btn btn-success\">\n                    GET WIN <span class=\"badge badge-light\">{this.state.highestBid}</span>\n                </button>\n            </div>\n        }\n        return (\n            <>\n                <Navbar\n                    address={this.state.userAccount}\n                    logoutUser={this.logoutUser}\n                    balance={this.state.balance}\n                />\n                <div className=\"container\" style={{ width: '800px' }}>\n                    <div className=\"card-body\">\n                        <h3> {this.state.timer ? \"WINNER : \" + this.state.highestBidder : \"Auction Base : \" + this.state.startingBid} MCT </h3>\n                    </div>\n                    <div className=\"h-100 p-5 text-black bg-dark rounded-3\">\n                        <div className=\"container\" style={{ marginLeft: '220px' }}>\n                            {this.state.metadata.map(nft => (\n                                < Nft\n                                    key={nft.id}\n                                    name={nft.name}\n                                    description={nft.description}\n                                    image={nft.image}\n                                />\n                            ))}\n                        </div>\n                    </div>\n                    <div className=\"card-body\">\n                        {this.state.owner ? <button onClick={this.endAuction} type=\"submit\" class=\"btn btn-danger\"> End Auction </button> : <button onClick={this.joinAuction} type=\"submit\" class=\"btn btn-info\"> Join Auction </button>}\n                    </div>\n                    <div className=\"p-5 mb-4 bg-light rounded-3\">\n                        <div className=\"container\">\n                            <div className=\"card-body\">\n                                <Timer\n                                    handleTimerOver={this.handleTimerOver.bind(this)}\n                                />\n                            </div>\n                            <div className=\"card-body\">\n                                <h2 style={{ color: 'green' }} >\n                                    {this.state.timer ? \"Auction End\" : \"Highest Bid : \" + this.state.highestBid + \" MCT\"}\n                                </h2>\n                            </div>\n                        </div>\n                    </div>\n                    <ul className=\"list-group\">\n                        {this.state.auctionBids.map(bid => (\n                            < Bidders\n                                key={bid.id}\n                                bidder={bid.bidder}\n                                bidAmount={bid.bidAmount}\n                            />\n                        ))}\n                    </ul>\n                    {content}\n                    <div className=\"container\" style={{ marginTop: '30px' }}>\n                        {this.state.owner ? ' ' : <button onClick={this.withdraw} type=\"button\" class=\"btn btn-success\">\n                            Withdraw <span class=\"badge badge-light\">{this.state.refund}</span>\n                        </button>}\n                    </div>\n                    <div className=\"card-body\">\n                        {win}\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n} export default OngoingAuction;","/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/NftMarketplace.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Bidders.js",[],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/BidForm.js",[],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/CountdownTimer.js",[],["154","155"],"/Users/mauriziocapone/Desktop/nftmarketplaceapp/src/components/Timer.js",["156","157","158"],"import React, { Component, useState } from 'react'\nimport NftMarket from '../abis/NftMarket.json'\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: {},\n            timer: 0,\n            over: false,\n            loading: true\n        }\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n        this.closeAuction = this.closeAuction.bind(this);\n    }\n\n    async componentDidMount() {\n        await this.loadBlockchainData()\n        if (this.state.timeLeft > 0) {\n            this.startTimer();\n        } else {\n            this.setState({ over: true });\n        }\n\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const networkId = await web3.eth.net.getId()\n        const marketData = NftMarket.networks[networkId]\n\n        if (marketData) {\n            const nftMarket = new web3.eth.Contract(NftMarket.abi, marketData.address)\n            const auctionTime = await nftMarket.methods.auction_end().call()\n            const timeLeft = auctionTime - Math.floor((new Date()).getTime() / 1000);\n            if (timeLeft < 0)\n                this.closeAuction();\n            this.setState({ timeLeft })\n\n            let auctionState = await nftMarket.methods.STATE().call()\n            this.setState({ auctionState })\n\n        } else {\n            window.alert('NftMarket contract not deployed to detected network')\n        }\n        this.setState({ loading: false })\n    }\n\n    startTimer() {\n        this.timer = setInterval(this.countDown, 1000);\n\n    }\n\n    countDown() {\n        let seconds = this.state.timeLeft - 1;\n        this.setState({\n            time: this.secondsToTime(seconds),\n            timeLeft: seconds,\n        });\n\n        if (this.state.time.h === 0 && this.state.time.m === 0 && this.state.time.s === 0) { // da provare\n            console.log(\"time over\");\n            this.closeAuction();\n        }\n    }\n\n    secondsToTime(secs) {\n        let hours = Math.floor(secs / (60 * 60));\n\n        let divisor_for_minutes = secs % (60 * 60);\n        let minutes = Math.floor(divisor_for_minutes / 60);\n\n        let divisor_for_seconds = divisor_for_minutes % 60;\n        let seconds = Math.ceil(divisor_for_seconds);\n\n        let obj = {\n            \"h\": hours,\n            \"m\": minutes,\n            \"s\": seconds\n        };\n        return obj;\n    }\n\n    closeAuction() {\n        clearInterval(this.interval);\n        this.setState({ over: true });\n        this.props.handleTimerOver();\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    {this.state.over ? <h4>Time is up!!</h4> : [\"H : \" + this.state.time.h + \"  \" + \" M : \" + this.state.time.m + \"  \" + \" S : \" + this.state.time.s]}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Timer;",{"ruleId":"159","severity":1,"message":"160","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":35},{"ruleId":"159","severity":1,"message":"163","line":2,"column":50,"nodeType":"161","messageId":"162","endLine":2,"endColumn":54},{"ruleId":"159","severity":1,"message":"164","line":2,"column":56,"nodeType":"161","messageId":"162","endLine":2,"endColumn":64},{"ruleId":"159","severity":1,"message":"165","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":14},{"ruleId":"159","severity":1,"message":"166","line":2,"column":27,"nodeType":"161","messageId":"162","endLine":2,"endColumn":33},{"ruleId":"159","severity":1,"message":"167","line":2,"column":35,"nodeType":"161","messageId":"162","endLine":2,"endColumn":40},{"ruleId":"159","severity":1,"message":"168","line":2,"column":42,"nodeType":"161","messageId":"162","endLine":2,"endColumn":48},{"ruleId":"159","severity":1,"message":"163","line":2,"column":50,"nodeType":"161","messageId":"162","endLine":2,"endColumn":54},{"ruleId":"159","severity":1,"message":"164","line":2,"column":56,"nodeType":"161","messageId":"162","endLine":2,"endColumn":64},{"ruleId":"159","severity":1,"message":"169","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":19},{"ruleId":"159","severity":1,"message":"170","line":7,"column":8,"nodeType":"161","messageId":"162","endLine":7,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":49,"column":32,"nodeType":"173","messageId":"174","endLine":49,"endColumn":34},{"ruleId":"159","severity":1,"message":"175","line":60,"column":13,"nodeType":"161","messageId":"162","endLine":60,"endColumn":18},{"ruleId":"159","severity":1,"message":"176","line":62,"column":13,"nodeType":"161","messageId":"162","endLine":62,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":87,"column":39,"nodeType":"173","messageId":"174","endLine":87,"endColumn":41},{"ruleId":"171","severity":1,"message":"172","line":89,"column":39,"nodeType":"173","messageId":"174","endLine":89,"endColumn":41},{"ruleId":"159","severity":1,"message":"177","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":31,"column":11,"nodeType":"180","endLine":31,"endColumn":74},{"ruleId":"159","severity":1,"message":"181","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":37},{"ruleId":"159","severity":1,"message":"166","line":2,"column":27,"nodeType":"161","messageId":"162","endLine":2,"endColumn":33},{"ruleId":"159","severity":1,"message":"167","line":2,"column":35,"nodeType":"161","messageId":"162","endLine":2,"endColumn":40},{"ruleId":"159","severity":1,"message":"168","line":2,"column":42,"nodeType":"161","messageId":"162","endLine":2,"endColumn":48},{"ruleId":"159","severity":1,"message":"163","line":2,"column":50,"nodeType":"161","messageId":"162","endLine":2,"endColumn":54},{"ruleId":"159","severity":1,"message":"164","line":2,"column":56,"nodeType":"161","messageId":"162","endLine":2,"endColumn":64},{"ruleId":"159","severity":1,"message":"169","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":19},{"ruleId":"159","severity":1,"message":"165","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":30,"column":28,"nodeType":"173","messageId":"174","endLine":30,"endColumn":30},{"ruleId":"171","severity":1,"message":"172","line":30,"column":99,"nodeType":"173","messageId":"174","endLine":30,"endColumn":101},{"ruleId":"171","severity":1,"message":"172","line":34,"column":33,"nodeType":"173","messageId":"174","endLine":34,"endColumn":35},{"ruleId":"171","severity":1,"message":"172","line":34,"column":84,"nodeType":"173","messageId":"174","endLine":34,"endColumn":86},{"ruleId":"182","severity":1,"message":"183","line":35,"column":7,"nodeType":"184","endLine":35,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":37,"column":33,"nodeType":"173","messageId":"174","endLine":37,"endColumn":35},{"ruleId":"171","severity":1,"message":"172","line":37,"column":85,"nodeType":"173","messageId":"174","endLine":37,"endColumn":87},{"ruleId":"182","severity":1,"message":"183","line":38,"column":7,"nodeType":"184","endLine":38,"endColumn":17},{"ruleId":"159","severity":1,"message":"185","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":12},{"ruleId":"159","severity":1,"message":"186","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":20},{"ruleId":"159","severity":1,"message":"187","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":17},{"ruleId":"188","severity":1,"message":"189","line":18,"column":37,"nodeType":"180","endLine":18,"endColumn":90},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"178","severity":1,"message":"194","line":30,"column":11,"nodeType":"180","endLine":30,"endColumn":39},{"ruleId":"178","severity":1,"message":"194","line":31,"column":11,"nodeType":"180","endLine":31,"endColumn":39},{"ruleId":"171","severity":1,"message":"172","line":185,"column":29,"nodeType":"173","messageId":"174","endLine":185,"endColumn":31},{"ruleId":"159","severity":1,"message":"166","line":2,"column":27,"nodeType":"161","messageId":"162","endLine":2,"endColumn":33},{"ruleId":"159","severity":1,"message":"167","line":2,"column":35,"nodeType":"161","messageId":"162","endLine":2,"endColumn":40},{"ruleId":"159","severity":1,"message":"168","line":2,"column":42,"nodeType":"161","messageId":"162","endLine":2,"endColumn":48},{"ruleId":"159","severity":1,"message":"163","line":2,"column":50,"nodeType":"161","messageId":"162","endLine":2,"endColumn":54},{"ruleId":"159","severity":1,"message":"164","line":2,"column":56,"nodeType":"161","messageId":"162","endLine":2,"endColumn":64},{"ruleId":"171","severity":1,"message":"172","line":119,"column":34,"nodeType":"173","messageId":"174","endLine":119,"endColumn":36},{"ruleId":"171","severity":1,"message":"172","line":134,"column":41,"nodeType":"173","messageId":"174","endLine":134,"endColumn":43},{"ruleId":"195","severity":1,"message":"196","line":136,"column":18,"nodeType":"161","messageId":"197","endLine":136,"endColumn":19},{"ruleId":"171","severity":1,"message":"172","line":148,"column":41,"nodeType":"173","messageId":"174","endLine":148,"endColumn":43},{"ruleId":"195","severity":1,"message":"196","line":150,"column":18,"nodeType":"161","messageId":"197","endLine":150,"endColumn":19},{"ruleId":"171","severity":1,"message":"172","line":217,"column":14,"nodeType":"173","messageId":"174","endLine":217,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":221,"column":21,"nodeType":"173","messageId":"174","endLine":221,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":225,"column":21,"nodeType":"173","messageId":"174","endLine":225,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":229,"column":21,"nodeType":"173","messageId":"174","endLine":229,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":274,"column":22,"nodeType":"173","messageId":"174","endLine":274,"endColumn":24},{"ruleId":"190","replacedBy":"198"},{"ruleId":"192","replacedBy":"199"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":28,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"201","line":95,"column":99,"nodeType":"173","messageId":"202","endLine":95,"endColumn":100},{"ruleId":"200","severity":1,"message":"201","line":95,"column":136,"nodeType":"173","messageId":"202","endLine":95,"endColumn":137},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Redirect' is defined but never used.","'Navbar' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'PropTypes' is defined but never used.","'Auction' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'smURI' is assigned a value but never used.","'dpURI' is assigned a value but never used.","'Login' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useReducer' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Web3' is defined but never used.","'AuctionToken' is defined but never used.","'NftMarket' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["203"],"no-negated-in-lhs",["204"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-redeclare","'i' is already defined.","redeclared",["203"],["204"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]
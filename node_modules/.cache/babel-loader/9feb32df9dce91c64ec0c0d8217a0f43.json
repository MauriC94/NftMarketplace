{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n'use strict';\n\nvar _ = require('underscore');\n\nvar core = require('web3-core');\n\nvar Method = require('web3-core-method');\n\nvar Account = require('eth-lib/lib/account');\n\nvar Hash = require('eth-lib/lib/hash');\n\nvar cryp = typeof global === 'undefined' ? require('crypto-browserify') : require('crypto');\n\nvar scrypt = require('scrypt-js');\n\nvar uuid = require('uuid');\n\nvar utils = require('web3-utils');\n\nvar helpers = require('web3-core-helpers');\n\nvar {\n  TransactionFactory\n} = require('@ethereumjs/tx');\n\nvar Common = require('@ethereumjs/common').default;\n\nvar isNot = function (value) {\n  return _.isUndefined(value) || _.isNull(value);\n};\n\nvar Accounts = function Accounts() {\n  var _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, arguments); // remove unecessary core functions\n\n  delete this.BatchRequest;\n  delete this.extend;\n  var _ethereumCall = [new Method({\n    name: 'getNetworkId',\n    call: 'net_version',\n    params: 0,\n    outputFormatter: parseInt\n  }), new Method({\n    name: 'getChainId',\n    call: 'eth_chainId',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0\n  }), new Method({\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [function (address) {\n      if (utils.isAddress(address)) {\n        return address;\n      } else {\n        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n      }\n    }, function () {\n      return 'latest';\n    }]\n  })]; // attach methods to this._ethereumCall\n\n  this._ethereumCall = {};\n\n  _.each(_ethereumCall, function (method) {\n    method.attachToObject(_this._ethereumCall);\n    method.setRequestManager(_this._requestManager);\n  });\n\n  this.wallet = new Wallet(this);\n};\n\nAccounts.prototype._addAccountFunctions = function (account) {\n  var _this = this; // add sign functions\n\n\n  account.signTransaction = function signTransaction(tx, callback) {\n    return _this.signTransaction(tx, account.privateKey, callback);\n  };\n\n  account.sign = function sign(data) {\n    return _this.sign(data, account.privateKey);\n  };\n\n  account.encrypt = function encrypt(password, options) {\n    return _this.encrypt(account.privateKey, password, options);\n  };\n\n  return account;\n};\n\nAccounts.prototype.create = function create(entropy) {\n  return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\n\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  } // 64 hex characters + hex-prefix\n\n\n  if (!ignoreLength && privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n\n  return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\n\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n  var _this = this,\n      error = false,\n      transactionOptions = {},\n      hasTxSigningOptions = !!(tx && (tx.chain && tx.hardfork || tx.common));\n\n  callback = callback || function () {};\n\n  if (!tx) {\n    error = new Error('No transaction object given!');\n    callback(error);\n    return Promise.reject(error);\n  }\n\n  function signed(tx) {\n    const error = _validateTransactionForSigning(tx);\n\n    if (error) {\n      callback(error);\n      return Promise.reject(error);\n    }\n\n    try {\n      var transaction = helpers.formatters.inputCallFormatter(_.clone(tx));\n      transaction.data = transaction.data || '0x';\n      transaction.value = transaction.value || '0x';\n      transaction.gasLimit = transaction.gasLimit || transaction.gas;\n      transaction.type = \"0x0\"; // default to legacy\n\n      if (transaction.accessList) {\n        // EIP-2930\n        transaction.type = \"0x01\";\n      } // Because tx has no @ethereumjs/tx signing options we use fetched vals.\n\n\n      if (!hasTxSigningOptions) {\n        transactionOptions.common = Common.forCustomChain('mainnet', {\n          name: 'custom-network',\n          networkId: transaction.networkId,\n          chainId: transaction.chainId\n        }, transaction.hardfork || \"berlin\");\n        delete transaction.networkId;\n      } else {\n        if (transaction.common) {\n          transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n            name: transaction.common.customChain.name || 'custom-network',\n            networkId: transaction.common.customChain.networkId,\n            chainId: transaction.common.customChain.chainId\n          }, transaction.common.hardfork || \"berlin\");\n          delete transaction.common;\n        }\n\n        if (transaction.chain) {\n          transactionOptions.chain = transaction.chain;\n          delete transaction.chain;\n        }\n\n        if (transaction.hardfork) {\n          transactionOptions.hardfork = transaction.hardfork;\n          delete transaction.hardfork;\n        }\n      }\n\n      if (privateKey.startsWith('0x')) {\n        privateKey = privateKey.substring(2);\n      }\n\n      var ethTx = TransactionFactory.fromTxData(transaction, transactionOptions);\n      var signedTx = ethTx.sign(Buffer.from(privateKey, 'hex'));\n      var validationErrors = signedTx.validate(true);\n\n      if (validationErrors.length > 0) {\n        let errorString = 'Signer Error: ';\n\n        for (const validationError of validationErrors) {\n          errorString += `${errorString} ${validationError}.`;\n        }\n\n        throw new Error(errorString);\n      }\n\n      var rlpEncoded = signedTx.serialize().toString('hex');\n      var rawTransaction = '0x' + rlpEncoded;\n      var transactionHash = utils.keccak256(rawTransaction);\n      var result = {\n        messageHash: '0x' + Buffer.from(signedTx.getMessageToSign(true)).toString('hex'),\n        v: '0x' + Buffer.from(signedTx.v).toString('hex'),\n        r: '0x' + Buffer.from(signedTx.r).toString('hex'),\n        s: '0x' + Buffer.from(signedTx.s).toString('hex'),\n        rawTransaction: rawTransaction,\n        transactionHash: transactionHash\n      };\n      callback(null, result);\n      return result;\n    } catch (e) {\n      callback(e);\n      return Promise.reject(e);\n    }\n  } // Resolve immediately if nonce, chainId, price and signing options are provided\n\n\n  if (tx.nonce !== undefined && tx.chainId !== undefined && tx.gasPrice !== undefined && hasTxSigningOptions) {\n    return Promise.resolve(signed(tx));\n  } // Otherwise, get the missing info from the Ethereum Node\n\n\n  return Promise.all([isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId, isNot(tx.gasPrice) ? _this._ethereumCall.getGasPrice() : tx.gasPrice, isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce, isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1]).then(function (args) {\n    if (isNot(args[0]) || isNot(args[1]) || isNot(args[2]) || isNot(args[3])) {\n      throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n    }\n\n    return signed(_.extend(tx, {\n      chainId: args[0],\n      gasPrice: args[1],\n      nonce: args[2],\n      networkId: args[3]\n    }));\n  });\n};\n\nfunction _validateTransactionForSigning(tx) {\n  if (tx.common && tx.chain && tx.hardfork) {\n    return new Error('Please provide the @ethereumjs/common object or the chain and hardfork property but not all together.');\n  }\n\n  if (tx.chain && !tx.hardfork || tx.hardfork && !tx.chain) {\n    return new Error('When specifying chain and hardfork, both values must be defined. ' + 'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n  }\n\n  if (!tx.gas && !tx.gasLimit) {\n    return new Error('\"gas\" is missing');\n  }\n\n  if (tx.nonce < 0 || tx.gas < 0 || tx.gasPrice < 0 || tx.chainId < 0) {\n    return new Error('Gas, gasPrice, nonce or chainId is lower than 0');\n  }\n\n  return;\n}\n/* jshint ignore:start */\n\n\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx, txOptions = {}) {\n  // Rely on EthereumJs/tx to determine the type of transaction\n  const data = Buffer.from(rawTx.slice(2), \"hex\");\n  const tx = TransactionFactory.fromSerializedData(data); //update checksum\n\n  return utils.toChecksumAddress(tx.getSenderAddress().toString(\"hex\"));\n};\n/* jshint ignore:end */\n\n\nAccounts.prototype.hashMessage = function hashMessage(data) {\n  var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n  var messageBytes = utils.hexToBytes(messageHex);\n  var messageBuffer = Buffer.from(messageBytes);\n  var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n  var preambleBuffer = Buffer.from(preamble);\n  var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n  return Hash.keccak256s(ethMessage);\n};\n\nAccounts.prototype.sign = function sign(data, privateKey) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  } // 64 hex characters + hex-prefix\n\n\n  if (privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n\n  var hash = this.hashMessage(data);\n  var signature = Account.sign(hash, privateKey);\n  var vrs = Account.decodeSignature(signature);\n  return {\n    message: data,\n    messageHash: hash,\n    v: vrs[0],\n    r: vrs[1],\n    s: vrs[2],\n    signature: signature\n  };\n};\n\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n  var args = [].slice.apply(arguments);\n\n  if (_.isObject(message)) {\n    return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n  }\n\n  if (!preFixed) {\n    message = this.hashMessage(message);\n  }\n\n  if (args.length >= 4) {\n    preFixed = args.slice(-1)[0];\n    preFixed = _.isBoolean(preFixed) ? !!preFixed : false;\n    return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n  }\n\n  return Account.recover(message, signature);\n}; // Taken from https://github.com/ethereumjs/ethereumjs-wallet\n\n\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n  /* jshint maxcomplexity: 10 */\n  if (!_.isString(password)) {\n    throw new Error('No password given.');\n  }\n\n  var json = _.isObject(v3Keystore) ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n\n  if (json.version !== 3) {\n    throw new Error('Not a valid V3 wallet');\n  }\n\n  var derivedKey;\n  var kdfparams;\n\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams; // FIXME: support progress reporting callback\n\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n  var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n\n  if (mac !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong password');\n  }\n\n  var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = '0x' + Buffer.from([...decipher.update(ciphertext), ...decipher.final()]).toString('hex');\n  return this.privateKeyToAccount(seed, true);\n};\n\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n  /* jshint maxcomplexity: 20 */\n  var account = this.privateKeyToAccount(privateKey, true);\n  options = options || {};\n  var salt = options.salt || cryp.randomBytes(32);\n  var iv = options.iv || cryp.randomBytes(16);\n  var derivedKey;\n  var kdf = options.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: options.dklen || 32,\n    salt: salt.toString('hex')\n  };\n\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = options.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n\n    kdfparams.r = options.r || 8;\n    kdfparams.p = options.p || 1;\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n\n  var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n\n  var ciphertext = Buffer.from([...cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')), ...cipher.final()]);\n  var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n  return {\n    version: 3,\n    id: uuid.v4({\n      random: options.uuid || cryp.randomBytes(16)\n    }),\n    address: account.address.toLowerCase().replace('0x', ''),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: options.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n}; // Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\n\n\nfunction Wallet(accounts) {\n  this._accounts = accounts;\n  this.length = 0;\n  this.defaultKeyName = 'web3js_wallet';\n}\n\nWallet.prototype._findSafeIndex = function (pointer) {\n  pointer = pointer || 0;\n\n  if (_.has(this, pointer)) {\n    return this._findSafeIndex(pointer + 1);\n  } else {\n    return pointer;\n  }\n};\n\nWallet.prototype._currentIndexes = function () {\n  var keys = Object.keys(this);\n  var indexes = keys.map(function (key) {\n    return parseInt(key);\n  }).filter(function (n) {\n    return n < 9e20;\n  });\n  return indexes;\n};\n\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n  for (var i = 0; i < numberOfAccounts; ++i) {\n    this.add(this._accounts.create(entropy).privateKey);\n  }\n\n  return this;\n};\n\nWallet.prototype.add = function (account) {\n  if (_.isString(account)) {\n    account = this._accounts.privateKeyToAccount(account);\n  }\n\n  if (!this[account.address]) {\n    account = this._accounts.privateKeyToAccount(account.privateKey);\n    account.index = this._findSafeIndex();\n    this[account.index] = account;\n    this[account.address] = account;\n    this[account.address.toLowerCase()] = account;\n    this.length++;\n    return account;\n  } else {\n    return this[account.address];\n  }\n};\n\nWallet.prototype.remove = function (addressOrIndex) {\n  var account = this[addressOrIndex];\n\n  if (account && account.address) {\n    // address\n    this[account.address].privateKey = null;\n    delete this[account.address]; // address lowercase\n\n    this[account.address.toLowerCase()].privateKey = null;\n    delete this[account.address.toLowerCase()]; // index\n\n    this[account.index].privateKey = null;\n    delete this[account.index];\n    this.length--;\n    return true;\n  } else {\n    return false;\n  }\n};\n\nWallet.prototype.clear = function () {\n  var _this = this;\n\n  var indexes = this._currentIndexes();\n\n  indexes.forEach(function (index) {\n    _this.remove(index);\n  });\n  return this;\n};\n\nWallet.prototype.encrypt = function (password, options) {\n  var _this = this;\n\n  var indexes = this._currentIndexes();\n\n  var accounts = indexes.map(function (index) {\n    return _this[index].encrypt(password, options);\n  });\n  return accounts;\n};\n\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n  var _this = this;\n\n  encryptedWallet.forEach(function (keystore) {\n    var account = _this._accounts.decrypt(keystore, password);\n\n    if (account) {\n      _this.add(account);\n    } else {\n      throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n    }\n  });\n  return this;\n};\n\nWallet.prototype.save = function (password, keyName) {\n  localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n  return true;\n};\n\nWallet.prototype.load = function (password, keyName) {\n  var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n\n  if (keystore) {\n    try {\n      keystore = JSON.parse(keystore);\n    } catch (e) {}\n  }\n\n  return this.decrypt(keystore || [], password);\n};\n\nif (!storageAvailable('localStorage')) {\n  delete Wallet.prototype.save;\n  delete Wallet.prototype.load;\n}\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\n\n\nfunction storageAvailable(type) {\n  var storage;\n\n  try {\n    storage = window[type];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === 'QuotaExceededError' || // Firefox\n    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n\nmodule.exports = Accounts;","map":{"version":3,"sources":["/Users/mauriziocapone/Desktop/nftmarketplaceapp/node_modules/web3-eth-accounts/lib/index.js"],"names":["_","require","core","Method","Account","Hash","cryp","global","scrypt","uuid","utils","helpers","TransactionFactory","Common","default","isNot","value","isUndefined","isNull","Accounts","_this","packageInit","arguments","BatchRequest","extend","_ethereumCall","name","call","params","outputFormatter","parseInt","hexToNumber","inputFormatter","address","isAddress","Error","each","method","attachToObject","setRequestManager","_requestManager","wallet","Wallet","prototype","_addAccountFunctions","account","signTransaction","tx","callback","privateKey","sign","data","encrypt","password","options","create","entropy","randomHex","privateKeyToAccount","ignoreLength","startsWith","length","fromPrivate","error","transactionOptions","hasTxSigningOptions","chain","hardfork","common","Promise","reject","signed","_validateTransactionForSigning","transaction","formatters","inputCallFormatter","clone","gasLimit","gas","type","accessList","forCustomChain","networkId","chainId","baseChain","customChain","substring","ethTx","fromTxData","signedTx","Buffer","from","validationErrors","validate","errorString","validationError","rlpEncoded","serialize","toString","rawTransaction","transactionHash","keccak256","result","messageHash","getMessageToSign","v","r","s","e","nonce","undefined","gasPrice","resolve","all","getChainId","getGasPrice","getTransactionCount","getNetworkId","then","args","JSON","stringify","recoverTransaction","rawTx","txOptions","slice","fromSerializedData","toChecksumAddress","getSenderAddress","hashMessage","messageHex","isHexStrict","utf8ToHex","messageBytes","hexToBytes","messageBuffer","preamble","preambleBuffer","ethMessage","concat","keccak256s","hash","signature","vrs","decodeSignature","message","recover","preFixed","apply","isObject","encodeSignature","isBoolean","decrypt","v3Keystore","nonStrict","isString","json","parse","toLowerCase","version","derivedKey","kdfparams","crypto","kdf","syncScrypt","salt","n","p","dklen","prf","pbkdf2Sync","c","ciphertext","mac","sha3","replace","decipher","createDecipheriv","cipher","cipherparams","iv","seed","update","final","randomBytes","createCipheriv","id","v4","random","accounts","_accounts","defaultKeyName","_findSafeIndex","pointer","has","_currentIndexes","keys","Object","indexes","map","key","filter","numberOfAccounts","i","add","index","remove","addressOrIndex","clear","forEach","encryptedWallet","keystore","save","keyName","localStorage","setItem","load","getItem","storageAvailable","storage","window","x","removeItem","code","module","exports"],"mappings":"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","sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n'use strict';\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar Account = require('eth-lib/lib/account');\nvar Hash = require('eth-lib/lib/hash');\nvar cryp = (typeof global === 'undefined') ? require('crypto-browserify') : require('crypto');\nvar scrypt = require('scrypt-js');\nvar uuid = require('uuid');\nvar utils = require('web3-utils');\nvar helpers = require('web3-core-helpers');\nvar { TransactionFactory } = require('@ethereumjs/tx');\nvar Common = require('@ethereumjs/common').default;\nvar isNot = function (value) {\n    return (_.isUndefined(value) || _.isNull(value));\n};\nvar Accounts = function Accounts() {\n    var _this = this;\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n    // remove unecessary core functions\n    delete this.BatchRequest;\n    delete this.extend;\n    var _ethereumCall = [\n        new Method({\n            name: 'getNetworkId',\n            call: 'net_version',\n            params: 0,\n            outputFormatter: parseInt\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [function (address) {\n                    if (utils.isAddress(address)) {\n                        return address;\n                    }\n                    else {\n                        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n                    }\n                }, function () {\n                    return 'latest';\n                }]\n        })\n    ];\n    // attach methods to this._ethereumCall\n    this._ethereumCall = {};\n    _.each(_ethereumCall, function (method) {\n        method.attachToObject(_this._ethereumCall);\n        method.setRequestManager(_this._requestManager);\n    });\n    this.wallet = new Wallet(this);\n};\nAccounts.prototype._addAccountFunctions = function (account) {\n    var _this = this;\n    // add sign functions\n    account.signTransaction = function signTransaction(tx, callback) {\n        return _this.signTransaction(tx, account.privateKey, callback);\n    };\n    account.sign = function sign(data) {\n        return _this.sign(data, account.privateKey);\n    };\n    account.encrypt = function encrypt(password, options) {\n        return _this.encrypt(account.privateKey, password, options);\n    };\n    return account;\n};\nAccounts.prototype.create = function create(entropy) {\n    return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n    // 64 hex characters + hex-prefix\n    if (!ignoreLength && privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n    return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n    var _this = this, error = false, transactionOptions = {}, hasTxSigningOptions = !!(tx && ((tx.chain && tx.hardfork) || tx.common));\n    callback = callback || function () { };\n    if (!tx) {\n        error = new Error('No transaction object given!');\n        callback(error);\n        return Promise.reject(error);\n    }\n    function signed(tx) {\n        const error = _validateTransactionForSigning(tx);\n        if (error) {\n            callback(error);\n            return Promise.reject(error);\n        }\n        try {\n            var transaction = helpers.formatters.inputCallFormatter(_.clone(tx));\n            transaction.data = transaction.data || '0x';\n            transaction.value = transaction.value || '0x';\n            transaction.gasLimit = transaction.gasLimit || transaction.gas;\n            transaction.type = \"0x0\"; // default to legacy\n            if (transaction.accessList) {\n                // EIP-2930\n                transaction.type = \"0x01\";\n            }\n            // Because tx has no @ethereumjs/tx signing options we use fetched vals.\n            if (!hasTxSigningOptions) {\n                transactionOptions.common = Common.forCustomChain('mainnet', {\n                    name: 'custom-network',\n                    networkId: transaction.networkId,\n                    chainId: transaction.chainId\n                }, transaction.hardfork || \"berlin\");\n                delete transaction.networkId;\n            }\n            else {\n                if (transaction.common) {\n                    transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n                        name: transaction.common.customChain.name || 'custom-network',\n                        networkId: transaction.common.customChain.networkId,\n                        chainId: transaction.common.customChain.chainId\n                    }, transaction.common.hardfork || \"berlin\");\n                    delete transaction.common;\n                }\n                if (transaction.chain) {\n                    transactionOptions.chain = transaction.chain;\n                    delete transaction.chain;\n                }\n                if (transaction.hardfork) {\n                    transactionOptions.hardfork = transaction.hardfork;\n                    delete transaction.hardfork;\n                }\n            }\n            if (privateKey.startsWith('0x')) {\n                privateKey = privateKey.substring(2);\n            }\n            var ethTx = TransactionFactory.fromTxData(transaction, transactionOptions);\n            var signedTx = ethTx.sign(Buffer.from(privateKey, 'hex'));\n            var validationErrors = signedTx.validate(true);\n            if (validationErrors.length > 0) {\n                let errorString = 'Signer Error: ';\n                for (const validationError of validationErrors) {\n                    errorString += `${errorString} ${validationError}.`;\n                }\n                throw new Error(errorString);\n            }\n            var rlpEncoded = signedTx.serialize().toString('hex');\n            var rawTransaction = '0x' + rlpEncoded;\n            var transactionHash = utils.keccak256(rawTransaction);\n            var result = {\n                messageHash: '0x' + Buffer.from(signedTx.getMessageToSign(true)).toString('hex'),\n                v: '0x' + Buffer.from(signedTx.v).toString('hex'),\n                r: '0x' + Buffer.from(signedTx.r).toString('hex'),\n                s: '0x' + Buffer.from(signedTx.s).toString('hex'),\n                rawTransaction: rawTransaction,\n                transactionHash: transactionHash\n            };\n            callback(null, result);\n            return result;\n        }\n        catch (e) {\n            callback(e);\n            return Promise.reject(e);\n        }\n    }\n    // Resolve immediately if nonce, chainId, price and signing options are provided\n    if (tx.nonce !== undefined && tx.chainId !== undefined && tx.gasPrice !== undefined && hasTxSigningOptions) {\n        return Promise.resolve(signed(tx));\n    }\n    // Otherwise, get the missing info from the Ethereum Node\n    return Promise.all([\n        isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId,\n        isNot(tx.gasPrice) ? _this._ethereumCall.getGasPrice() : tx.gasPrice,\n        isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce,\n        isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1\n    ]).then(function (args) {\n        if (isNot(args[0]) || isNot(args[1]) || isNot(args[2]) || isNot(args[3])) {\n            throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n        }\n        return signed(_.extend(tx, { chainId: args[0], gasPrice: args[1], nonce: args[2], networkId: args[3] }));\n    });\n};\nfunction _validateTransactionForSigning(tx) {\n    if (tx.common && (tx.chain && tx.hardfork)) {\n        return new Error('Please provide the @ethereumjs/common object or the chain and hardfork property but not all together.');\n    }\n    if ((tx.chain && !tx.hardfork) || (tx.hardfork && !tx.chain)) {\n        return new Error('When specifying chain and hardfork, both values must be defined. ' +\n            'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n    }\n    if (!tx.gas && !tx.gasLimit) {\n        return new Error('\"gas\" is missing');\n    }\n    if (tx.nonce < 0 ||\n        tx.gas < 0 ||\n        tx.gasPrice < 0 ||\n        tx.chainId < 0) {\n        return new Error('Gas, gasPrice, nonce or chainId is lower than 0');\n    }\n    return;\n}\n/* jshint ignore:start */\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx, txOptions = {}) {\n    // Rely on EthereumJs/tx to determine the type of transaction\n    const data = Buffer.from(rawTx.slice(2), \"hex\");\n    const tx = TransactionFactory.fromSerializedData(data);\n    //update checksum\n    return utils.toChecksumAddress(tx.getSenderAddress().toString(\"hex\"));\n};\n/* jshint ignore:end */\nAccounts.prototype.hashMessage = function hashMessage(data) {\n    var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n    var messageBytes = utils.hexToBytes(messageHex);\n    var messageBuffer = Buffer.from(messageBytes);\n    var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n    var preambleBuffer = Buffer.from(preamble);\n    var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n    return Hash.keccak256s(ethMessage);\n};\nAccounts.prototype.sign = function sign(data, privateKey) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n    // 64 hex characters + hex-prefix\n    if (privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n    var hash = this.hashMessage(data);\n    var signature = Account.sign(hash, privateKey);\n    var vrs = Account.decodeSignature(signature);\n    return {\n        message: data,\n        messageHash: hash,\n        v: vrs[0],\n        r: vrs[1],\n        s: vrs[2],\n        signature: signature\n    };\n};\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n    var args = [].slice.apply(arguments);\n    if (_.isObject(message)) {\n        return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n    }\n    if (!preFixed) {\n        message = this.hashMessage(message);\n    }\n    if (args.length >= 4) {\n        preFixed = args.slice(-1)[0];\n        preFixed = _.isBoolean(preFixed) ? !!preFixed : false;\n        return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n    }\n    return Account.recover(message, signature);\n};\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n    /* jshint maxcomplexity: 10 */\n    if (!_.isString(password)) {\n        throw new Error('No password given.');\n    }\n    var json = (_.isObject(v3Keystore)) ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n    if (json.version !== 3) {\n        throw new Error('Not a valid V3 wallet');\n    }\n    var derivedKey;\n    var kdfparams;\n    if (json.crypto.kdf === 'scrypt') {\n        kdfparams = json.crypto.kdfparams;\n        // FIXME: support progress reporting callback\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    }\n    else if (json.crypto.kdf === 'pbkdf2') {\n        kdfparams = json.crypto.kdfparams;\n        if (kdfparams.prf !== 'hmac-sha256') {\n            throw new Error('Unsupported parameters to PBKDF2');\n        }\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else {\n        throw new Error('Unsupported key derivation scheme');\n    }\n    var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    if (mac !== json.crypto.mac) {\n        throw new Error('Key derivation failed - possibly wrong password');\n    }\n    var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n    var seed = '0x' + Buffer.from([...decipher.update(ciphertext), ...decipher.final()]).toString('hex');\n    return this.privateKeyToAccount(seed, true);\n};\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n    /* jshint maxcomplexity: 20 */\n    var account = this.privateKeyToAccount(privateKey, true);\n    options = options || {};\n    var salt = options.salt || cryp.randomBytes(32);\n    var iv = options.iv || cryp.randomBytes(16);\n    var derivedKey;\n    var kdf = options.kdf || 'scrypt';\n    var kdfparams = {\n        dklen: options.dklen || 32,\n        salt: salt.toString('hex')\n    };\n    if (kdf === 'pbkdf2') {\n        kdfparams.c = options.c || 262144;\n        kdfparams.prf = 'hmac-sha256';\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else if (kdf === 'scrypt') {\n        // FIXME: support progress reporting callback\n        kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n        kdfparams.r = options.r || 8;\n        kdfparams.p = options.p || 1;\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    }\n    else {\n        throw new Error('Unsupported kdf');\n    }\n    var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n    if (!cipher) {\n        throw new Error('Unsupported cipher');\n    }\n    var ciphertext = Buffer.from([\n        ...cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')),\n        ...cipher.final()\n    ]);\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    return {\n        version: 3,\n        id: uuid.v4({ random: options.uuid || cryp.randomBytes(16) }),\n        address: account.address.toLowerCase().replace('0x', ''),\n        crypto: {\n            ciphertext: ciphertext.toString('hex'),\n            cipherparams: {\n                iv: iv.toString('hex')\n            },\n            cipher: options.cipher || 'aes-128-ctr',\n            kdf: kdf,\n            kdfparams: kdfparams,\n            mac: mac.toString('hex')\n        }\n    };\n};\n// Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\nfunction Wallet(accounts) {\n    this._accounts = accounts;\n    this.length = 0;\n    this.defaultKeyName = 'web3js_wallet';\n}\nWallet.prototype._findSafeIndex = function (pointer) {\n    pointer = pointer || 0;\n    if (_.has(this, pointer)) {\n        return this._findSafeIndex(pointer + 1);\n    }\n    else {\n        return pointer;\n    }\n};\nWallet.prototype._currentIndexes = function () {\n    var keys = Object.keys(this);\n    var indexes = keys\n        .map(function (key) {\n        return parseInt(key);\n    })\n        .filter(function (n) {\n        return (n < 9e20);\n    });\n    return indexes;\n};\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n    for (var i = 0; i < numberOfAccounts; ++i) {\n        this.add(this._accounts.create(entropy).privateKey);\n    }\n    return this;\n};\nWallet.prototype.add = function (account) {\n    if (_.isString(account)) {\n        account = this._accounts.privateKeyToAccount(account);\n    }\n    if (!this[account.address]) {\n        account = this._accounts.privateKeyToAccount(account.privateKey);\n        account.index = this._findSafeIndex();\n        this[account.index] = account;\n        this[account.address] = account;\n        this[account.address.toLowerCase()] = account;\n        this.length++;\n        return account;\n    }\n    else {\n        return this[account.address];\n    }\n};\nWallet.prototype.remove = function (addressOrIndex) {\n    var account = this[addressOrIndex];\n    if (account && account.address) {\n        // address\n        this[account.address].privateKey = null;\n        delete this[account.address];\n        // address lowercase\n        this[account.address.toLowerCase()].privateKey = null;\n        delete this[account.address.toLowerCase()];\n        // index\n        this[account.index].privateKey = null;\n        delete this[account.index];\n        this.length--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nWallet.prototype.clear = function () {\n    var _this = this;\n    var indexes = this._currentIndexes();\n    indexes.forEach(function (index) {\n        _this.remove(index);\n    });\n    return this;\n};\nWallet.prototype.encrypt = function (password, options) {\n    var _this = this;\n    var indexes = this._currentIndexes();\n    var accounts = indexes.map(function (index) {\n        return _this[index].encrypt(password, options);\n    });\n    return accounts;\n};\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n    var _this = this;\n    encryptedWallet.forEach(function (keystore) {\n        var account = _this._accounts.decrypt(keystore, password);\n        if (account) {\n            _this.add(account);\n        }\n        else {\n            throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n        }\n    });\n    return this;\n};\nWallet.prototype.save = function (password, keyName) {\n    localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n    return true;\n};\nWallet.prototype.load = function (password, keyName) {\n    var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n    if (keystore) {\n        try {\n            keystore = JSON.parse(keystore);\n        }\n        catch (e) {\n        }\n    }\n    return this.decrypt(keystore || [], password);\n};\nif (!storageAvailable('localStorage')) {\n    delete Wallet.prototype.save;\n    delete Wallet.prototype.load;\n}\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\nfunction storageAvailable(type) {\n    var storage;\n    try {\n        storage = window[type];\n        var x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    }\n    catch (e) {\n        return e && (\n        // everything except Firefox\n        e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n}\nmodule.exports = Accounts;\n"]},"metadata":{},"sourceType":"script"}
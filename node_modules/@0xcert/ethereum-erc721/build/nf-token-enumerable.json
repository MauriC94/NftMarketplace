{
  "NFTokenEnumerable": {
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "_approved",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "_operator",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "_approved",
            "type": "bool"
          }
        ],
        "name": "ApprovalForAll",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "_from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "_to",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_approved",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "getApproved",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_operator",
            "type": "address"
          }
        ],
        "name": "isApprovedForAll",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "ownerOf",
        "outputs": [
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_operator",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "_approved",
            "type": "bool"
          }
        ],
        "name": "setApprovalForAll",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "_interfaceID",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_index",
            "type": "uint256"
          }
        ],
        "name": "tokenByIndex",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_index",
            "type": "uint256"
          }
        ],
        "name": "tokenOfOwnerByIndex",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "evm": {
      "bytecode": {
        "object": "608060405234801561001057600080fd5b50600060208190527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092557ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed780800805482168317905563780e9d6360e01b9092527f77b7bbe0e49b76487c9476b5db3354cf5270619d0037ccb899c2a4c4a75b43188054909216179055611212806100b56000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342842e0e1161008c57806370a082311161006657806370a08231146101a6578063a22cb465146101b9578063b88d4fde146101cc578063e985e9c5146101df576100cf565b806342842e0e1461016d5780634f6ccce7146101805780636352211e14610193576100cf565b806301ffc9a7146100d4578063081812fc146100fd578063095ea7b31461011d57806318160ddd1461013257806323b872dd146101475780632f745c591461015a575b600080fd5b6100e76100e2366004611090565b6101f2565b6040516100f4919061117c565b60405180910390f35b61011061010b3660046110c8565b610215565b6040516100f4919061112b565b61013061012b366004611067565b610297565b005b61013a610439565b6040516100f4919061119a565b610130610155366004610f5c565b61043f565b61013a610168366004611067565b6105fa565b61013061017b366004610f5c565b61069f565b61013a61018e3660046110c8565b6106bf565b6101106101a13660046110c8565b610735565b61013a6101b4366004610f09565b61078d565b6101306101c736600461102d565b6107e4565b6101306101da366004610f97565b610853565b6100e76101ed366004610f2a565b61089c565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b03166102755760405162461bcd60e51b815260040161026c9190611187565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b0316338114806102e257506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020016530303330303360d01b8152509061031f5760405162461bcd60e51b815260040161026c9190611187565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166103795760405162461bcd60e51b815260040161026c9190611187565b50600084815260016020908152604091829020548251808401909352600683526506060666060760d31b918301919091526001600160a01b03908116919087168214156103d95760405162461bcd60e51b815260040161026c9190611187565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60055490565b60008181526001602052604090205481906001600160a01b03163381148061047d57506000828152600260205260409020546001600160a01b031633145b806104ab57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906104e85760405162461bcd60e51b815260040161026c9190611187565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166105425760405162461bcd60e51b815260040161026c9190611187565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146105a15760405162461bcd60e51b815260040161026c9190611187565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0387166105e65760405162461bcd60e51b815260040161026c9190611187565b506105f186866108ca565b50505050505050565b6001600160a01b0382166000908152600760209081526040808320548151808301909252600682526530303530303760d01b928201929092529083106106535760405162461bcd60e51b815260040161026c9190611187565b506001600160a01b038316600090815260076020526040902080548390811061068c57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6106ba83838360405180602001604052806000815250610945565b505050565b60055460408051808201909152600681526530303530303760d01b602082015260009183106107015760405162461bcd60e51b815260040161026c9190611187565b506005828154811061072357634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b031690816102915760405162461bcd60e51b815260040161026c9190611187565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b0383166107d45760405162461bcd60e51b815260040161026c9190611187565b506107de82610bf3565b92915050565b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061084790859061117c565b60405180910390a35050565b61089585858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061094592505050565b5050505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000818152600160205260409020546001600160a01b03166108eb82610c0e565b6108f58183610c4b565b6108ff8383610df2565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526001602052604090205482906001600160a01b03163381148061098357506000828152600260205260409020546001600160a01b031633145b806109b157506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906109ee5760405162461bcd60e51b815260040161026c9190611187565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610a485760405162461bcd60e51b815260040161026c9190611187565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03908116919089168214610aa75760405162461bcd60e51b815260040161026c9190611187565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b038816610aec5760405162461bcd60e51b815260040161026c9190611187565b50610af787876108ca565b610b09876001600160a01b0316610eb6565b15610be957604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a0290610b439033908d908c908c9060040161113f565b602060405180830381600087803b158015610b5d57600080fd5b505af1158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9591906110ac565b60408051808201909152600681526530303330303560d01b60208201529091506001600160e01b03198216630a85bd0160e11b14610be65760405162461bcd60e51b815260040161026c9190611187565b50505b5050505050505050565b6001600160a01b031660009081526007602052604090205490565b6000818152600260205260409020546001600160a01b031615610c4857600081815260026020526040902080546001600160a01b03191690555b50565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03848116911614610ca65760405162461bcd60e51b815260040161026c9190611187565b50600081815260016020818152604080842080546001600160a01b031916905560088252808420546001600160a01b03871685526007909252832054909291610cee916111a3565b9050818114610da1576001600160a01b0384166000908152600760205260408120805483908110610d2f57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060076000876001600160a01b03166001600160a01b031681526020019081526020016000208481548110610d8157634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925591825260089052604090208290555b6001600160a01b0384166000908152600760205260409020805480610dd657634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b031615610e495760405162461bcd60e51b815260040161026c9190611187565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b03881690811790915580855260078352908420805480850182558186529285209092018590559092529054610ea391906111a3565b6000918252600860205260409091205550565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590610eea5750808214155b949350505050565b80356001600160a01b038116811461021057600080fd5b600060208284031215610f1a578081fd5b610f2382610ef2565b9392505050565b60008060408385031215610f3c578081fd5b610f4583610ef2565b9150610f5360208401610ef2565b90509250929050565b600080600060608486031215610f70578081fd5b610f7984610ef2565b9250610f8760208501610ef2565b9150604084013590509250925092565b600080600080600060808688031215610fae578081fd5b610fb786610ef2565b9450610fc560208701610ef2565b935060408601359250606086013567ffffffffffffffff80821115610fe8578283fd5b818801915088601f830112610ffb578283fd5b813581811115611009578384fd5b89602082850101111561101a578384fd5b9699959850939650602001949392505050565b6000806040838503121561103f578182fd5b61104883610ef2565b91506020830135801515811461105c578182fd5b809150509250929050565b60008060408385031215611079578182fd5b61108283610ef2565b946020939093013593505050565b6000602082840312156110a1578081fd5b8135610f23816111c6565b6000602082840312156110bd578081fd5b8151610f23816111c6565b6000602082840312156110d9578081fd5b5035919050565b60008151808452815b81811015611105576020818501810151868301820152016110e9565b818111156111165782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611172908301846110e0565b9695505050505050565b901515815260200190565b600060208252610f2360208301846110e0565b90815260200190565b6000828210156111c157634e487b7160e01b81526011600452602481fd5b500390565b6001600160e01b031981168114610c4857600080fdfea264697066735822122088b2c50a090870f99e060c9b99fbfe5421dfffad5cc532408a18581641bef76764736f6c63430008000033"
      },
      "methodIdentifiers": {
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "getApproved(uint256)": "081812fc",
        "isApprovedForAll(address,address)": "e985e9c5",
        "ownerOf(uint256)": "6352211e",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "tokenByIndex(uint256)": "4f6ccce7",
        "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
        "totalSupply()": "18160ddd",
        "transferFrom(address,address,uint256)": "23b872dd"
      }
    },
    "metadata": {
      "compiler": {
        "version": "0.8.0+commit.c7dfd78e"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_approved",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "_approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_approved",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "getApproved",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "ownerOf",
            "outputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "_approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_interfaceID",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_index",
                "type": "uint256"
              }
            ],
            "name": "tokenByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_index",
                "type": "uint256"
              }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {
            "approve(address,uint256)": {
              "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
              "params": {
                "_approved": "Address to be approved for the given NFT ID.",
                "_tokenId": "ID of the token to be approved."
              }
            },
            "balanceOf(address)": {
              "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
              "params": {
                "_owner": "Address for whom to query the balance."
              },
              "returns": {
                "_0": "Balance of _owner."
              }
            },
            "constructor": {
              "details": "Contract constructor."
            },
            "getApproved(uint256)": {
              "details": "Get the approved address for a single NFT.",
              "params": {
                "_tokenId": "ID of the NFT to query the approval of."
              },
              "returns": {
                "_0": "Address that _tokenId is approved for."
              }
            },
            "isApprovedForAll(address,address)": {
              "details": "Checks if `_operator` is an approved operator for `_owner`.",
              "params": {
                "_operator": "The address that acts on behalf of the owner.",
                "_owner": "The address that owns the NFTs."
              },
              "returns": {
                "_0": "True if approved for all, false otherwise."
              }
            },
            "ownerOf(uint256)": {
              "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
              "params": {
                "_tokenId": "The identifier for an NFT."
              },
              "returns": {
                "_owner": "Address of _tokenId owner."
              }
            },
            "safeTransferFrom(address,address,uint256)": {
              "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
              "params": {
                "_from": "The current owner of the NFT.",
                "_to": "The new owner.",
                "_tokenId": "The NFT to transfer."
              }
            },
            "safeTransferFrom(address,address,uint256,bytes)": {
              "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
              "params": {
                "_data": "Additional data with no specified format, sent in call to `_to`.",
                "_from": "The current owner of the NFT.",
                "_to": "The new owner.",
                "_tokenId": "The NFT to transfer."
              }
            },
            "setApprovalForAll(address,bool)": {
              "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
              "params": {
                "_approved": "True if the operators is approved, false to revoke approval.",
                "_operator": "Address to add to the set of authorized operators."
              }
            },
            "supportsInterface(bytes4)": {
              "details": "Function to check which interfaces are suported by this contract.",
              "params": {
                "_interfaceID": "Id of the interface."
              },
              "returns": {
                "_0": "True if _interfaceID is supported, false otherwise."
              }
            },
            "tokenByIndex(uint256)": {
              "details": "Returns NFT ID by its index.",
              "params": {
                "_index": "A counter less than `totalSupply()`."
              },
              "returns": {
                "_0": "Token id."
              }
            },
            "tokenOfOwnerByIndex(address,uint256)": {
              "details": "returns the n-th NFT ID from a list of owner's tokens.",
              "params": {
                "_index": "Index number representing n-th token in owner's list of tokens.",
                "_owner": "Token owner's address."
              },
              "returns": {
                "_0": "Token id."
              }
            },
            "totalSupply()": {
              "details": "Returns the count of all existing NFTokens.",
              "returns": {
                "_0": "Total supply of NFTs."
              }
            },
            "transferFrom(address,address,uint256)": {
              "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
              "params": {
                "_from": "The current owner of the NFT.",
                "_to": "The new owner.",
                "_tokenId": "The NFT to transfer."
              }
            }
          },
          "stateVariables": {
            "INVALID_INDEX": {
              "details": "List of revert message codes. Implementing dApp should handle showing the correct message. Based on 0xcert framework error codes."
            },
            "idToIndex": {
              "details": "Mapping from token ID to its index in global tokens array."
            },
            "idToOwnerIndex": {
              "details": "Mapping from NFT ID to its index in the owner tokens list."
            },
            "ownerToIds": {
              "details": "Mapping from owner to list of owned NFT IDs."
            },
            "tokens": {
              "details": "Array of all NFT IDs."
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "approve(address,uint256)": {
              "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
            },
            "getApproved(uint256)": {
              "notice": "Throws if `_tokenId` is not a valid NFT."
            },
            "safeTransferFrom(address,address,uint256)": {
              "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
            },
            "safeTransferFrom(address,address,uint256,bytes)": {
              "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
            },
            "setApprovalForAll(address,bool)": {
              "notice": "This works even if sender doesn't own any tokens at the time."
            },
            "transferFrom(address,address,uint256)": {
              "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
            }
          },
          "version": 1
        }
      },
      "settings": {
        "compilationTarget": {
          "./src/contracts/tokens/nf-token-enumerable.sol": "NFTokenEnumerable"
        },
        "evmVersion": "istanbul",
        "libraries": {},
        "metadata": {
          "bytecodeHash": "ipfs"
        },
        "optimizer": {
          "enabled": true,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "./src/contracts/tokens/nf-token-enumerable.sol": {
          "keccak256": "0xfc1783a6805c1c145962209f046fb5ccbf6c16147117d86a51420fe2092c65d4",
          "urls": [
            "bzz-raw://f46c12f46134054a1d4318e2b3ee93c4cc437a7bb56a1b59d04eb40b05fe8b1d",
            "dweb:/ipfs/QmNWKrauyvGcdZqFnLEU26K7zXpTuVpyjHxoBrfk7zRYc4"
          ]
        }
      },
      "version": 1
    }
  }
}
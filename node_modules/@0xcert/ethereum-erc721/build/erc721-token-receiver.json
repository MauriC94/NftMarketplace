{
  "ERC721TokenReceiver": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_operator",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_from",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "onERC721Received",
        "outputs": [
          {
            "internalType": "bytes4",
            "name": "",
            "type": "bytes4"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "evm": {
      "bytecode": {
        "object": ""
      },
      "methodIdentifiers": {
        "onERC721Received(address,address,uint256,bytes)": "150b7a02"
      }
    },
    "metadata": {
      "compiler": {
        "version": "0.8.0+commit.c7dfd78e"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "onERC721Received",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {
            "onERC721Received(address,address,uint256,bytes)": {
              "details": "Handle the receipt of a NFT. The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.",
              "params": {
                "_data": "Additional data with no specified format.",
                "_from": "The address which previously owned the token.",
                "_operator": "The address which called `safeTransferFrom` function.",
                "_tokenId": "The NFT identifier which is being transferred."
              },
              "returns": {
                "_0": "Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`."
              }
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "onERC721Received(address,address,uint256,bytes)": {
              "notice": "The contract address is always the message sender. A wallet/broker/auction application MUST implement the wallet interface if it will accept safe transfers."
            }
          },
          "version": 1
        }
      },
      "settings": {
        "compilationTarget": {
          "./src/contracts/tokens/erc721-token-receiver.sol": "ERC721TokenReceiver"
        },
        "evmVersion": "istanbul",
        "libraries": {},
        "metadata": {
          "bytecodeHash": "ipfs"
        },
        "optimizer": {
          "enabled": true,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "./src/contracts/tokens/erc721-token-receiver.sol": {
          "keccak256": "0xcbee804713d9428607f4e743dbb401d0fd329285f011033e57134b8a44a71fad",
          "urls": [
            "bzz-raw://662cf139f20962a64e00189483a5f8171122640f11a815906e80cfe6b9e748d2",
            "dweb:/ipfs/Qmet7r4ri4ioxChZvoAwndcqaQYvHjzNcaL9qaoWzRXyor"
          ]
        }
      },
      "version": 1
    }
  }
}
{
  "NFTokenReceiverTestMock": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_operator",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_from",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "onERC721Received",
        "outputs": [
          {
            "internalType": "bytes4",
            "name": "",
            "type": "bytes4"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      }
    ],
    "evm": {
      "bytecode": {
        "object": "608060405234801561001057600080fd5b50610167806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004361003e366004610086565b610059565b604051610050919061011c565b60405180910390f35b630a85bd0160e11b95945050505050565b80356001600160a01b038116811461008157600080fd5b919050565b60008060008060006080868803121561009d578081fd5b6100a68661006a565b94506100b46020870161006a565b935060408601359250606086013567ffffffffffffffff808211156100d7578283fd5b818801915088601f8301126100ea578283fd5b8135818111156100f8578384fd5b896020828501011115610109578384fd5b9699959850939650602001949392505050565b6001600160e01b03199190911681526020019056fea2646970667358221220a0db4683781185f5c98202111e9b12686d6a858b35978f110b45f6e1c910a7f964736f6c63430008000033"
      },
      "methodIdentifiers": {
        "onERC721Received(address,address,uint256,bytes)": "150b7a02"
      }
    },
    "metadata": {
      "compiler": {
        "version": "0.8.0+commit.c7dfd78e"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "onERC721Received",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {
            "onERC721Received(address,address,uint256,bytes)": {
              "details": "Handle the receipt of a NFT. The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.",
              "params": {
                "_data": "Additional data with no specified format.",
                "_from": "The address which previously owned the token.",
                "_operator": "The address which called `safeTransferFrom` function.",
                "_tokenId": "The NFT identifier which is being transferred."
              },
              "returns": {
                "_0": "Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`."
              }
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "onERC721Received(address,address,uint256,bytes)": {
              "notice": "The contract address is always the message sender. A wallet/broker/auction application MUST implement the wallet interface if it will accept safe transfers."
            }
          },
          "version": 1
        }
      },
      "settings": {
        "compilationTarget": {
          "./src/tests/mocks/nf-token-receiver-test-mock.sol": "NFTokenReceiverTestMock"
        },
        "evmVersion": "istanbul",
        "libraries": {},
        "metadata": {
          "bytecodeHash": "ipfs"
        },
        "optimizer": {
          "enabled": true,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "./src/tests/mocks/nf-token-receiver-test-mock.sol": {
          "keccak256": "0x0aee08b9fdf25972533a5eced3342e91dd68b6096c63456213f50e07244a34b1",
          "urls": [
            "bzz-raw://eda8e77185da13151ee0f6b36b4a804fdc7d1c0e09032315f1f6c0e3b33ffe70",
            "dweb:/ipfs/QmRfCAqy34QQbQT63jLZFym9UWZWEBw8BHRy31USBPPM18"
          ]
        }
      },
      "version": 1
    }
  }
}
{
  "NFTokenMetadataEnumerableMock": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "_symbol",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "_approved",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "_operator",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "_approved",
            "type": "bool"
          }
        ],
        "name": "ApprovalForAll",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "_from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "_to",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "NOT_CURRENT_OWNER",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_approved",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "burn",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "getApproved",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_operator",
            "type": "address"
          }
        ],
        "name": "isApprovedForAll",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "_uri",
            "type": "string"
          }
        ],
        "name": "mint",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "_name",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "ownerOf",
        "outputs": [
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_operator",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "_approved",
            "type": "bool"
          }
        ],
        "name": "setApprovalForAll",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "_interfaceID",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "_symbol",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_index",
            "type": "uint256"
          }
        ],
        "name": "tokenByIndex",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_index",
            "type": "uint256"
          }
        ],
        "name": "tokenOfOwnerByIndex",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "tokenURI",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "evm": {
      "bytecode": {
        "object": "60806040523480156200001157600080fd5b5060405162001f6038038062001f60833981016040819052620000349162000289565b600060208181527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092557ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed78080080548216831790557f77b7bbe0e49b76487c9476b5db3354cf5270619d0037ccb899c2a4c4a75b43188054821683179055635b5e139f60e01b9093527f9562381dfbc2d8b8b66e765249f330164b73e329e5f01670660643571d1974df805490931617909155600c80546001600160a01b03191633179055825162000119916009919085019062000138565b5080516200012f90600a90602084019062000138565b50505062000343565b8280546200014690620002f0565b90600052602060002090601f0160209004810192826200016a5760008555620001b5565b82601f106200018557805160ff1916838001178555620001b5565b82800160010185558215620001b5579182015b82811115620001b557825182559160200191906001019062000198565b50620001c3929150620001c7565b5090565b5b80821115620001c35760008155600101620001c8565b600082601f830112620001ef578081fd5b81516001600160401b03808211156200020c576200020c6200032d565b6040516020601f8401601f19168201810183811183821017156200023457620002346200032d565b60405283825285840181018710156200024b578485fd5b8492505b838310156200026e57858301810151828401820152918201916200024f565b838311156200027f57848185840101525b5095945050505050565b600080604083850312156200029c578182fd5b82516001600160401b0380821115620002b3578384fd5b620002c186838701620001de565b93506020850151915080821115620002d7578283fd5b50620002e685828601620001de565b9150509250929050565b6002810460018216806200030557607f821691505b602082108114156200032757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611c0d80620003536000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063b88d4fde1161007c578063b88d4fde1461027f578063c87b56dd14610292578063d3fc9864146102a5578063e985e9c5146102b8578063f2fde38b146102cb578063f3fe3bc3146102de57610142565b806370a0823114610241578063860d248a146102545780638da5cb5b1461025c57806395d89b4114610264578063a22cb4651461026c57610142565b806323b872dd1161010a57806323b872dd146101cf5780632f745c59146101e257806342842e0e146101f557806342966c68146102085780634f6ccce71461021b5780636352211e1461022e57610142565b806301ffc9a71461014757806306fdde0314610170578063081812fc14610185578063095ea7b3146101a557806318160ddd146101ba575b600080fd5b61015a610155366004611a56565b6102e6565b6040516101679190611b42565b60405180910390f35b610178610309565b6040516101679190611b4d565b610198610193366004611a8e565b61039b565b6040516101679190611af1565b6101b86101b33660046119d5565b61041d565b005b6101c26105bf565b6040516101679190611b60565b6101b86101dd3660046118f3565b6105c5565b6101c26101f03660046119d5565b610780565b6101b86102033660046118f3565b610825565b6101b8610216366004611a8e565b610845565b6101c2610229366004611a8e565b61089b565b61019861023c366004611a8e565b610911565b6101c261024f3660046118a0565b610969565b6101786109c0565b6101986109e2565b6101786109f1565b6101b861027a36600461199b565b610a00565b6101b861028d36600461192e565b610a6f565b6101786102a0366004611a8e565b610ab8565b6101b86102b33660046119fe565b610bb3565b61015a6102c63660046118c1565b610c4d565b6101b86102d93660046118a0565b610c7b565b610178610d66565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60606009805461031890611b8c565b80601f016020809104026020016040519081016040528092919081815260200182805461034490611b8c565b80156103915780601f1061036657610100808354040283529160200191610391565b820191906000526020600020905b81548152906001019060200180831161037457829003601f168201915b5050505050905090565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b03166103fb5760405162461bcd60e51b81526004016103f29190611b4d565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b03163381148061046857506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020016530303330303360d01b815250906104a55760405162461bcd60e51b81526004016103f29190611b4d565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166104ff5760405162461bcd60e51b81526004016103f29190611b4d565b50600084815260016020908152604091829020548251808401909352600683526506060666060760d31b918301919091526001600160a01b039081169190871682141561055f5760405162461bcd60e51b81526004016103f29190611b4d565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60055490565b60008181526001602052604090205481906001600160a01b03163381148061060357506000828152600260205260409020546001600160a01b031633145b8061063157506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b8152509061066e5760405162461bcd60e51b81526004016103f29190611b4d565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166106c85760405162461bcd60e51b81526004016103f29190611b4d565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146107275760405162461bcd60e51b81526004016103f29190611b4d565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b03871661076c5760405162461bcd60e51b81526004016103f29190611b4d565b506107778686610d88565b50505050505050565b6001600160a01b0382166000908152600760209081526040808320548151808301909252600682526530303530303760d01b928201929092529083106107d95760405162461bcd60e51b81526004016103f29190611b4d565b506001600160a01b038316600090815260076020526040902080548390811061081257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b61084083838360405180602001604052806000815250610e03565b505050565b600c5460408051808201909152600681526530313830303160d01b6020820152906001600160a01b0316331461088e5760405162461bcd60e51b81526004016103f29190611b4d565b50610898816110b1565b50565b60055460408051808201909152600681526530303530303760d01b602082015260009183106108dd5760405162461bcd60e51b81526004016103f29190611b4d565b50600582815481106108ff57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b031690816104175760405162461bcd60e51b81526004016103f29190611b4d565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b0383166109b05760405162461bcd60e51b81526004016103f29190611b4d565b506109ba826110f1565b92915050565b6040518060400160405280600681526020016518189c18181960d11b81525081565b600c546001600160a01b031681565b6060600a805461031890611b8c565b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610a63908590611b42565b60405180910390a35050565b610ab185858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e0392505050565b5050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b9183019190915260609183916001600160a01b0316610b135760405162461bcd60e51b81526004016103f29190611b4d565b506000838152600b602052604090208054610b2d90611b8c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5990611b8c565b8015610ba65780601f10610b7b57610100808354040283529160200191610ba6565b820191906000526020600020905b815481529060010190602001808311610b8957829003601f168201915b5050505050915050919050565b600c5460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610bfc5760405162461bcd60e51b81526004016103f29190611b4d565b50610c0784846110fc565b610c478383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061115c92505050565b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600c5460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610cc45760405162461bcd60e51b81526004016103f29190611b4d565b5060408051808201909152600681526518189c18181960d11b60208201526001600160a01b038216610d095760405162461bcd60e51b81526004016103f29190611b4d565b50600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6040518060400160405280600681526020016530313830303160d01b81525081565b6000818152600160205260409020546001600160a01b0316610da9826111d5565b610db38183611210565b610dbd838361121e565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526001602052604090205482906001600160a01b031633811480610e4157506000828152600260205260409020546001600160a01b031633145b80610e6f57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610eac5760405162461bcd60e51b81526004016103f29190611b4d565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610f065760405162461bcd60e51b81526004016103f29190611b4d565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03908116919089168214610f655760405162461bcd60e51b81526004016103f29190611b4d565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b038816610faa5760405162461bcd60e51b81526004016103f29190611b4d565b50610fb58787610d88565b610fc7876001600160a01b0316611228565b156110a757604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a02906110019033908d908c908c90600401611b05565b602060405180830381600087803b15801561101b57600080fd5b505af115801561102f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110539190611a72565b60408051808201909152600681526530303330303560d01b60208201529091506001600160e01b03198216630a85bd0160e11b146110a45760405162461bcd60e51b81526004016103f29190611b4d565b50505b5050505050505050565b6110ba81611264565b6000818152600b6020526040902080546110d390611b8c565b159050610898576000818152600b602052604081206108989161176d565b60006109ba82611342565b611106828261135d565b600580546001818101835560008390527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910183905590546111499190611b69565b6000918252600660205260409091205550565b600082815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528391906001600160a01b03166111b55760405162461bcd60e51b81526004016103f29190611b4d565b506000838152600b602090815260409091208351610c47928501906117a9565b6000818152600260205260409020546001600160a01b03161561089857600090815260026020526040902080546001600160a01b0319169055565b61121a8282611440565b5050565b61121a82826115e7565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061125c5750808214155b949350505050565b61126d816116ab565b60008181526006602052604081205460055490919061128e90600190611b69565b90506000600582815481106112b357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080600584815481106112e257634e487b7160e01b600052603260045260246000fd5b600091825260209091200155600580548061130d57634e487b7160e01b600052603160045260246000fd5b600082815260208082208301600019908101839055909201909255918152600690915260408082209390935592835250812055565b6001600160a01b031660009081526007602052604090205490565b60408051808201909152600681526530303330303160d01b60208201526001600160a01b0383166113a15760405162461bcd60e51b81526004016103f29190611b4d565b50600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156113f95760405162461bcd60e51b81526004016103f29190611b4d565b50611404828261121e565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b0384811691161461149b5760405162461bcd60e51b81526004016103f29190611b4d565b50600081815260016020818152604080842080546001600160a01b031916905560088252808420546001600160a01b038716855260079092528320549092916114e391611b69565b9050818114611596576001600160a01b038416600090815260076020526040812080548390811061152457634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060076000876001600160a01b03166001600160a01b03168152602001908152602001600020848154811061157657634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925591825260089052604090208290555b6001600160a01b03841660009081526007602052604090208054806115cb57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b03161561163e5760405162461bcd60e51b81526004016103f29190611b4d565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b038816908117909155808552600783529084208054808501825581865292852090920185905590925290546116989190611b69565b6000918252600860205260409091205550565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528291906001600160a01b03166117045760405162461bcd60e51b81526004016103f29190611b4d565b506000828152600160205260409020546001600160a01b0316611726836111d5565b6117308184611210565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b50805461177990611b8c565b6000825580601f1061178b5750610898565b601f016020900490600052602060002090810190610898919061182d565b8280546117b590611b8c565b90600052602060002090601f0160209004810192826117d7576000855561181d565b82601f106117f057805160ff191683800117855561181d565b8280016001018555821561181d579182015b8281111561181d578251825591602001919060010190611802565b5061182992915061182d565b5090565b5b80821115611829576000815560010161182e565b80356001600160a01b038116811461030457600080fd5b60008083601f84011261186a578182fd5b50813567ffffffffffffffff811115611881578182fd5b60208301915083602082850101111561189957600080fd5b9250929050565b6000602082840312156118b1578081fd5b6118ba82611842565b9392505050565b600080604083850312156118d3578081fd5b6118dc83611842565b91506118ea60208401611842565b90509250929050565b600080600060608486031215611907578081fd5b61191084611842565b925061191e60208501611842565b9150604084013590509250925092565b600080600080600060808688031215611945578081fd5b61194e86611842565b945061195c60208701611842565b935060408601359250606086013567ffffffffffffffff81111561197e578182fd5b61198a88828901611859565b969995985093965092949392505050565b600080604083850312156119ad578182fd5b6119b683611842565b9150602083013580151581146119ca578182fd5b809150509250929050565b600080604083850312156119e7578182fd5b6119f083611842565b946020939093013593505050565b60008060008060608587031215611a13578384fd5b611a1c85611842565b935060208501359250604085013567ffffffffffffffff811115611a3e578283fd5b611a4a87828801611859565b95989497509550505050565b600060208284031215611a67578081fd5b81356118ba81611bc1565b600060208284031215611a83578081fd5b81516118ba81611bc1565b600060208284031215611a9f578081fd5b5035919050565b60008151808452815b81811015611acb57602081850181015186830182015201611aaf565b81811115611adc5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611b3890830184611aa6565b9695505050505050565b901515815260200190565b6000602082526118ba6020830184611aa6565b90815260200190565b600082821015611b8757634e487b7160e01b81526011600452602481fd5b500390565b600281046001821680611ba057607f821691505b6020821081141561041757634e487b7160e01b600052602260045260246000fd5b6001600160e01b03198116811461089857600080fdfea26469706673582212205cc513d309bd534684b772c536cbef76649631190f033bfbf932577e8855d9e564736f6c63430008000033"
      },
      "methodIdentifiers": {
        "CANNOT_TRANSFER_TO_ZERO_ADDRESS()": "860d248a",
        "NOT_CURRENT_OWNER()": "f3fe3bc3",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "getApproved(uint256)": "081812fc",
        "isApprovedForAll(address,address)": "e985e9c5",
        "mint(address,uint256,string)": "d3fc9864",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "ownerOf(uint256)": "6352211e",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenByIndex(uint256)": "4f6ccce7",
        "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
        "tokenURI(uint256)": "c87b56dd",
        "totalSupply()": "18160ddd",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
      }
    },
    "metadata": {
      "compiler": {
        "version": "0.8.0+commit.c7dfd78e"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "_name",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "_symbol",
                "type": "string"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_approved",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "_approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "NOT_CURRENT_OWNER",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_approved",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "getApproved",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "_uri",
                "type": "string"
              }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "_name",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "ownerOf",
            "outputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "_approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_interfaceID",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "_symbol",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_index",
                "type": "uint256"
              }
            ],
            "name": "tokenByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_index",
                "type": "uint256"
              }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "tokenURI",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {
            "approve(address,uint256)": {
              "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
              "params": {
                "_approved": "Address to be approved for the given NFT ID.",
                "_tokenId": "ID of the token to be approved."
              }
            },
            "balanceOf(address)": {
              "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
              "params": {
                "_owner": "Address for whom to query the balance."
              },
              "returns": {
                "_0": "Balance of _owner."
              }
            },
            "burn(uint256)": {
              "details": "Removes a NFT from owner.",
              "params": {
                "_tokenId": "Which NFT we want to remove."
              }
            },
            "constructor": {
              "details": "Contract constructor.",
              "params": {
                "_name": "A descriptive name for a collection of NFTs.",
                "_symbol": "An abbreviated name for NFTokens."
              }
            },
            "getApproved(uint256)": {
              "details": "Get the approved address for a single NFT.",
              "params": {
                "_tokenId": "ID of the NFT to query the approval of."
              },
              "returns": {
                "_0": "Address that _tokenId is approved for."
              }
            },
            "isApprovedForAll(address,address)": {
              "details": "Checks if `_operator` is an approved operator for `_owner`.",
              "params": {
                "_operator": "The address that acts on behalf of the owner.",
                "_owner": "The address that owns the NFTs."
              },
              "returns": {
                "_0": "True if approved for all, false otherwise."
              }
            },
            "mint(address,uint256,string)": {
              "details": "Mints a new NFT.",
              "params": {
                "_to": "The address that will own the minted NFT.",
                "_tokenId": "of the NFT to be minted by the msg.sender.",
                "_uri": "String representing RFC 3986 URI."
              }
            },
            "name()": {
              "details": "Returns a descriptive name for a collection of NFTokens.",
              "returns": {
                "_name": "Representing name."
              }
            },
            "ownerOf(uint256)": {
              "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
              "params": {
                "_tokenId": "The identifier for an NFT."
              },
              "returns": {
                "_owner": "Address of _tokenId owner."
              }
            },
            "safeTransferFrom(address,address,uint256)": {
              "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
              "params": {
                "_from": "The current owner of the NFT.",
                "_to": "The new owner.",
                "_tokenId": "The NFT to transfer."
              }
            },
            "safeTransferFrom(address,address,uint256,bytes)": {
              "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
              "params": {
                "_data": "Additional data with no specified format, sent in call to `_to`.",
                "_from": "The current owner of the NFT.",
                "_to": "The new owner.",
                "_tokenId": "The NFT to transfer."
              }
            },
            "setApprovalForAll(address,bool)": {
              "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
              "params": {
                "_approved": "True if the operators is approved, false to revoke approval.",
                "_operator": "Address to add to the set of authorized operators."
              }
            },
            "supportsInterface(bytes4)": {
              "details": "Function to check which interfaces are suported by this contract.",
              "params": {
                "_interfaceID": "Id of the interface."
              },
              "returns": {
                "_0": "True if _interfaceID is supported, false otherwise."
              }
            },
            "symbol()": {
              "details": "Returns an abbreviated name for NFTokens.",
              "returns": {
                "_symbol": "Representing symbol."
              }
            },
            "tokenByIndex(uint256)": {
              "details": "Returns NFT ID by its index.",
              "params": {
                "_index": "A counter less than `totalSupply()`."
              },
              "returns": {
                "_0": "Token id."
              }
            },
            "tokenOfOwnerByIndex(address,uint256)": {
              "details": "returns the n-th NFT ID from a list of owner's tokens.",
              "params": {
                "_index": "Index number representing n-th token in owner's list of tokens.",
                "_owner": "Token owner's address."
              },
              "returns": {
                "_0": "Token id."
              }
            },
            "tokenURI(uint256)": {
              "details": "A distinct URI (RFC 3986) for a given NFT.",
              "params": {
                "_tokenId": "Id for which we want uri."
              },
              "returns": {
                "_0": "URI of _tokenId."
              }
            },
            "totalSupply()": {
              "details": "Returns the count of all existing NFTokens.",
              "returns": {
                "_0": "Total supply of NFTs."
              }
            },
            "transferFrom(address,address,uint256)": {
              "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
              "params": {
                "_from": "The current owner of the NFT.",
                "_to": "The new owner.",
                "_tokenId": "The NFT to transfer."
              }
            },
            "transferOwnership(address)": {
              "details": "Allows the current owner to transfer control of the contract to a newOwner.",
              "params": {
                "_newOwner": "The address to transfer ownership to."
              }
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "approve(address,uint256)": {
              "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
            },
            "getApproved(uint256)": {
              "notice": "Throws if `_tokenId` is not a valid NFT."
            },
            "safeTransferFrom(address,address,uint256)": {
              "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
            },
            "safeTransferFrom(address,address,uint256,bytes)": {
              "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
            },
            "setApprovalForAll(address,bool)": {
              "notice": "This works even if sender doesn't own any tokens at the time."
            },
            "transferFrom(address,address,uint256)": {
              "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
            }
          },
          "version": 1
        }
      },
      "settings": {
        "compilationTarget": {
          "./src/contracts/mocks/nf-token-metadata-enumerable-mock.sol": "NFTokenMetadataEnumerableMock"
        },
        "evmVersion": "istanbul",
        "libraries": {},
        "metadata": {
          "bytecodeHash": "ipfs"
        },
        "optimizer": {
          "enabled": true,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "./src/contracts/mocks/nf-token-metadata-enumerable-mock.sol": {
          "keccak256": "0x308d5dc7e947a79752cbaed38f6965fef43ea405858c96b82471b01d92a273c8",
          "urls": [
            "bzz-raw://6708a5163e01c373824eff2be3b39259e79d0ce54c20a52a9550f003e01a505b",
            "dweb:/ipfs/QmbHj9iBMba3fxzzFvYnzDK1zNaX2gsZhwgiBAEHPJ89V2"
          ]
        }
      },
      "version": 1
    }
  }
}
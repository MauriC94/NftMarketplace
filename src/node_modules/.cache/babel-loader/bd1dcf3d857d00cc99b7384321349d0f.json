{"ast":null,"code":"var _jsxFileName = \"/Users/mauriziocapone/Desktop/NftMarketplace/nft-market-app/src/App.js\";\nimport React, { Component, PropTypes } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\nimport Web3 from 'web3';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Login from './Login';\nimport NftList from './NftList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  checkLogUsers() {\n    const ownerUser = \"owner@owner.com\";\n    const ownerPass = \"owner123\";\n    const firstBidder = \"firstBid@firstBid.com\";\n    const firstBidderPass = \"firstbidder123\";\n  }\n\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {}\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected.');\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.checkUser = (email, password) => {\n      console.log(email);\n      console.log(password);\n    };\n\n    this.checkUser = this.checkUser.bind(this);\n    this.state = {\n      loading: true\n    };\n  }\n\n  render() {\n    let content;\n\n    if (this.state.loading) {\n      content = /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"loader\",\n        classname: \"text-center\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    } else {\n      content = /*#__PURE__*/_jsxDEV(Login, {\n        checkUser: this.checkUser.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mauriziocapone/Desktop/NftMarketplace/nft-market-app/src/App.js"],"names":["React","Component","PropTypes","BrowserRouter","Router","Route","Switch","Link","Redirect","Web3","Navbar","Login","NftList","App","checkLogUsers","ownerUser","ownerPass","firstBidder","firstBidderPass","componentWillMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","constructor","props","checkUser","email","password","console","log","bind","state","loading","render","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,IAAjD,EAAuDC,QAAvD,QAAuE,kBAAvE;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,GAAN,SAAkBb,KAAK,CAACC,SAAxB,CAAkC;AAEhCa,EAAAA,aAAa,GAAE;AACb,UAAMC,SAAS,GAAG,iBAAlB;AACA,UAAMC,SAAS,GAAG,UAAlB;AAEA,UAAMC,WAAW,GAAG,uBAApB;AACA,UAAMC,eAAe,GAAG,gBAAxB;AACD;;AAEuB,QAAlBC,kBAAkB,GAAE;AACxB,UAAM,KAAKC,QAAL,EAAN;AACA,UAAM,KAAKC,kBAAL,EAAN;AACD;;AAEuB,QAAlBA,kBAAkB,GAAE,CACzB;;AAEa,QAARD,QAAQ,GAAG;AACf,QAAIE,MAAM,CAACC,QAAX,EAAqB;AACnBD,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAIf,IAAJ,CAASa,MAAM,CAACC,QAAhB,CAAd;AACA,YAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;AACD,KAHD,MAIK,IAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAIf,IAAJ,CAASa,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,KAFI,MAGA;AACHJ,MAAAA,MAAM,CAACK,KAAP,CAAa,gCAAb;AACD;AACF;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAQlBC,SARkB,GAQN,CAACC,KAAD,EAAOC,QAAP,KAAoB;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAXiB;;AAEhB,SAAKF,SAAL,GAAiB,KAAKA,SAAL,CAAeK,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAODC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAJ;;AACA,QAAG,KAAKH,KAAL,CAAWC,OAAd,EAAsB;AACpBE,MAAAA,OAAO,gBAAG;AAAG,QAAA,EAAE,EAAC,QAAN;AAAe,QAAA,SAAS,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAV;AACD,KAFD,MAEK;AACHA,MAAAA,OAAO,gBAAG,QAAC,KAAD;AACV,QAAA,SAAS,EAAI,KAAKT,SAAL,CAAeK,IAAf,CAAoB,IAApB;AADH;AAAA;AAAA;AAAA;AAAA,cAAV;AAGD;;AACD,wBACE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAExB;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA1D+B;;AA6DlC,eAAeE,GAAf","sourcesContent":["import React, { Component,PropTypes } from 'react'\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom'\nimport Web3 from 'web3'\nimport './App.css'\nimport Navbar from './Navbar'\nimport Login from './Login'\nimport NftList from './NftList'\n\nclass App extends React.Component {\n\n  checkLogUsers(){\n    const ownerUser = \"owner@owner.com\";\n    const ownerPass = \"owner123\";\n\n    const firstBidder = \"firstBid@firstBid.com\";\n    const firstBidderPass = \"firstbidder123\"; \n  }\n\n  async componentWillMount(){\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData(){\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected.')\n    }\n  }\n\n  constructor(props){\n    super(props);\n    this.checkUser = this.checkUser.bind(this);\n    this.state = {\n      loading: true\n    }\n  }\n\n  checkUser = (email,password) => {\n    console.log(email);\n    console.log(password);\n  }\n  \n  render() {\n    let content\n    if(this.state.loading){\n      content = <p id=\"loader\" classname=\"text-center\">Loading...</p>\n    }else{\n      content = <Login\n      checkUser = {this.checkUser.bind(this)}\n      />\n    }\n    return(\n      <Router>\n        <Route path=\"/\" component={Login}/>\n      </Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
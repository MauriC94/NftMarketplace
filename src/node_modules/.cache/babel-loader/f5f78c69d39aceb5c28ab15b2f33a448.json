{"ast":null,"code":"var _jsxFileName = \"/Users/mauriziocapone/Desktop/NftMarketplace/nft-market-app/src/App.js\";\nimport React, { Component, PropTypes } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Web3 from 'web3';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Login from './Login';\nimport NftList from './NftList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  checkLogUsers() {\n    const ownerUser = \"owner@owner.com\";\n    const ownerPass = \"owner123\";\n    const firstBidder = \"firstBid@firstBid.com\";\n    const firstBidderPass = \"firstbidder123\";\n  }\n\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {}\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected.');\n    }\n  }\n\n  constructor() {\n    super();\n\n    this.checkUser = (email, password) => {\n      console.log(email);\n      console.log(password);\n    };\n\n    this.checkUser = this.checkUser.bind(this);\n    this.state = {\n      isLogginActive: true,\n      loading: true\n    };\n  }\n\n  render() {\n    let content;\n\n    if (this.state.loading) {\n      content = /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"loader\",\n        classname: \"text-center\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this);\n    } else {\n      content = /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mauriziocapone/Desktop/NftMarketplace/nft-market-app/src/App.js"],"names":["React","Component","PropTypes","BrowserRouter","Route","Switch","Web3","Navbar","Login","NftList","App","checkLogUsers","ownerUser","ownerPass","firstBidder","firstBidderPass","componentWillMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","constructor","checkUser","email","password","console","log","bind","state","isLogginActive","loading","render","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACC,SAAxB,CAAkC;AAEhCU,EAAAA,aAAa,GAAE;AACb,UAAMC,SAAS,GAAG,iBAAlB;AACA,UAAMC,SAAS,GAAG,UAAlB;AAEA,UAAMC,WAAW,GAAG,uBAApB;AACA,UAAMC,eAAe,GAAG,gBAAxB;AACD;;AAOuB,QAAlBC,kBAAkB,GAAE;AACxB,UAAM,KAAKC,QAAL,EAAN;AACA,UAAM,KAAKC,kBAAL,EAAN;AACD;;AAEuB,QAAlBA,kBAAkB,GAAE,CAEzB;;AAEa,QAARD,QAAQ,GAAG;AACf,QAAIE,MAAM,CAACC,QAAX,EAAqB;AACnBD,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAIf,IAAJ,CAASa,MAAM,CAACC,QAAhB,CAAd;AACA,YAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;AACD,KAHD,MAIK,IAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAIf,IAAJ,CAASa,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,KAFI,MAGA;AACHJ,MAAAA,MAAM,CAACK,KAAP,CAAa,gCAAb;AACD;AACF;;AAEDC,EAAAA,WAAW,GAAE;AACX;;AADW,SA3BbC,SA2Ba,GA3BD,CAACC,KAAD,EAAOC,QAAP,KAAoB;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAwBY;;AAEX,SAAKF,SAAL,GAAiB,KAAKA,SAAL,CAAeK,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,IADL;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAJ;;AACA,QAAG,KAAKJ,KAAL,CAAWE,OAAd,EAAsB;AACpBE,MAAAA,OAAO,gBAAG;AAAG,QAAA,EAAE,EAAC,QAAN;AAAe,QAAA,SAAS,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAV;AACD,KAFD,MAEK;AACHA,MAAAA,OAAO,gBAAG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAV;AACD;;AACD,wBACI;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAKD;;AA1D+B;;AA6DlC,eAAe1B,GAAf","sourcesContent":["import React, { Component,PropTypes } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Web3 from 'web3'\nimport './App.css'\nimport Navbar from './Navbar'\nimport Login from './Login'\nimport NftList from './NftList'\n\nclass App extends React.Component {\n\n  checkLogUsers(){\n    const ownerUser = \"owner@owner.com\";\n    const ownerPass = \"owner123\";\n\n    const firstBidder = \"firstBid@firstBid.com\";\n    const firstBidderPass = \"firstbidder123\"; \n  }\n\n  checkUser = (email,password) => {\n    console.log(email);\n    console.log(password);\n  }\n\n  async componentWillMount(){\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData(){\n\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected.')\n    }\n  }\n\n  constructor(){\n    super();\n    this.checkUser = this.checkUser.bind(this);\n    this.state = {\n      isLogginActive: true,\n      loading: true\n    }\n  }\n  \n  render() {\n    let content\n    if(this.state.loading){\n      content = <p id=\"loader\" classname=\"text-center\">Loading...</p>\n    }else{\n      content = <Login/>\n    }\n    return ( \n        <div class=\"App\">\n          <Login/>\n        </div> \n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
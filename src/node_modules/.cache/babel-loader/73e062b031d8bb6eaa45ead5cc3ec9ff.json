{"ast":null,"code":"var _jsxFileName = \"/Users/mauriziocapone/Desktop/NftMarketplace/nft-market-app/src/NftList.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\nimport { PropTypes } from 'react';\nimport Web3 from 'web3';\nimport ChainlinkElf from \"./abis/ChainlinkElf.json\";\nimport ChainlinkOrc from \"./abis/ChainlinkOrc.json\";\nimport ChainlinkKnight from \"./abis/ChainlinkKnight.json\";\nimport Auction from \"./Auction\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NftList extends React.Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const networkId = await web3.eth.net.getId();\n    const accounts = await web3.eth.getAccounts(); // Load Collectibles\n\n    const chainlinkelf = ChainlinkElf.networks[networkId];\n    const chainlinkorc = ChainlinkOrc.networks[networkId];\n    const chainlinkknight = ChainlinkKnight.networks[networkId];\n\n    if (chainlinkelf && chainlinkorc && chainlinkknight) {\n      const cle = new web3.eth.Contract(ChainlinkElf.abi, chainlinkelf.address);\n      const clo = new web3.eth.Contract(ChainlinkOrc.abi, chainlinkorc.address);\n      const clk = new web3.eth.Contract(ChainlinkKnight.abi, chainlinkknight.address);\n      let cleURI = await cle.methods.tokenURI(1).call();\n      this.setState({\n        cleURI\n      });\n      let cloURI = await clo.methods.tokenURI(1).call();\n      this.setState({\n        cloURI\n      });\n      let clkURI = await clk.methods.tokenURI(1).call();\n      this.setState({\n        clkURI\n      });\n      const cleResponse = await fetch(cleURI);\n      const cloResponse = await fetch(cloURI);\n      const clkResponse = await fetch(clkURI);\n      if (!cleResponse.ok && !cloResponse.ok && !clkResponse.ok) throw new Error(response.statusText);\n      const cleJson = await cleResponse.json();\n      this.setState({\n        cleName: cleJson.name\n      });\n      this.setState({\n        cleDescription: cleJson.description\n      });\n      this.setState({\n        cleImage: cleJson.image\n      });\n      const cloJson = await cloResponse.json();\n      this.setState({\n        cloName: cloJson.name\n      });\n      this.setState({\n        cloDescription: cloJson.description\n      });\n      this.setState({\n        cloImage: cloJson.image\n      });\n      const clkJson = await clkResponse.json();\n      this.setState({\n        clkName: clkJson.name\n      });\n      this.setState({\n        clkDescription: clkJson.description\n      });\n      this.setState({\n        clkImage: clkJson.image\n      });\n    } else {\n      window.alert('NftList contract not deployed to detected network');\n    }\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected.');\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.setAccount = () => {\n      console.log(\"ciao\");\n    };\n\n    this.handleCleSubmit = this.handleCleSubmit.bind(this);\n    this.setAccount = this.setAccount.bind(this);\n    this.state = {\n      cleUri: '',\n      cleName: '',\n      cloName: '',\n      clkName: '',\n      cleImage: {},\n      cloImage: {},\n      clkImage: {},\n      cleDescription: '',\n      cloDescription: '',\n      clkDescription: '',\n      nft: [],\n      loading: false\n    };\n  }\n\n  handleCleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    let auctionForm;\n\n    if (this.state.loading) {\n      content = /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"loader\",\n        classname: \"text-center\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this);\n    } else {\n      auctionForm = /*#__PURE__*/_jsxDEV(Auction, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this);\n    }\n\n    let navbar = /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 18\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        handleSubmit: this.setAccount.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), navbar, /*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"mb-5\",\n        children: \" Owned ERC721 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row row-cols-1 row-cols-md-3 mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card mb-4 rounded-3 shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-header py-3\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                class: \"my-0 fw-normal\",\n                children: this.state.cleName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                class: \"list-unstyled mt-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: this.state.cleDescription\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: this.state.cleImage,\n                  width: \"250\",\n                  height: \"250\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), auctionForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NftList;","map":{"version":3,"sources":["/Users/mauriziocapone/Desktop/NftMarketplace/nft-market-app/src/NftList.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Link","Redirect","PropTypes","Web3","ChainlinkElf","ChainlinkOrc","ChainlinkKnight","Auction","Navbar","NftList","componentWillMount","loadWeb3","loadBlockchainData","web3","window","networkId","eth","net","getId","accounts","getAccounts","chainlinkelf","networks","chainlinkorc","chainlinkknight","cle","Contract","abi","address","clo","clk","cleURI","methods","tokenURI","call","setState","cloURI","clkURI","cleResponse","fetch","cloResponse","clkResponse","ok","Error","response","statusText","cleJson","json","cleName","name","cleDescription","description","cleImage","image","cloJson","cloName","cloDescription","cloImage","clkJson","clkName","clkDescription","clkImage","alert","ethereum","enable","currentProvider","constructor","props","setAccount","console","log","handleCleSubmit","bind","state","cleUri","nft","loading","event","preventDefault","render","auctionForm","content","navbar"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom'\nimport { PropTypes } from 'react'\nimport Web3 from 'web3'\nimport ChainlinkElf from \"./abis/ChainlinkElf.json\"\nimport ChainlinkOrc from \"./abis/ChainlinkOrc.json\"\nimport ChainlinkKnight from \"./abis/ChainlinkKnight.json\"\nimport Auction from \"./Auction\"\nimport Navbar from \"./Navbar\"\n\nclass NftList extends React.Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const networkId = await web3.eth.net.getId()\n    const accounts = await web3.eth.getAccounts()    \n\n    // Load Collectibles\n    const chainlinkelf = ChainlinkElf.networks[networkId]\n    const chainlinkorc = ChainlinkOrc.networks[networkId]\n    const chainlinkknight = ChainlinkKnight.networks[networkId]\n\n\n    if (chainlinkelf && chainlinkorc && chainlinkknight) {\n\n      const cle = new web3.eth.Contract(ChainlinkElf.abi, chainlinkelf.address)\n      const clo = new web3.eth.Contract(ChainlinkOrc.abi, chainlinkorc.address)\n      const clk = new web3.eth.Contract(ChainlinkKnight.abi, chainlinkknight.address)\n\n      let cleURI = await cle.methods.tokenURI(1).call()\n      this.setState({ cleURI })\n      let cloURI = await clo.methods.tokenURI(1).call()\n      this.setState({ cloURI })\n      let clkURI = await clk.methods.tokenURI(1).call()\n      this.setState({ clkURI })\n\n      const cleResponse = await fetch(cleURI);\n      const cloResponse = await fetch(cloURI);\n      const clkResponse = await fetch(clkURI);\n\n      if (!cleResponse.ok && !cloResponse.ok && !clkResponse.ok)\n        throw new Error(response.statusText);\n\n      const cleJson = await cleResponse.json();\n      this.setState({ cleName: cleJson.name })\n      this.setState({ cleDescription: cleJson.description })\n      this.setState({ cleImage: cleJson.image })\n\n      const cloJson = await cloResponse.json();\n      this.setState({ cloName: cloJson.name })\n      this.setState({ cloDescription: cloJson.description })\n      this.setState({ cloImage: cloJson.image })\n\n      const clkJson = await clkResponse.json();\n      this.setState({ clkName: clkJson.name })\n      this.setState({ clkDescription: clkJson.description })\n      this.setState({ clkImage: clkJson.image })\n\n    } else {\n      window.alert('NftList contract not deployed to detected network')\n    }\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected.')\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleCleSubmit = this.handleCleSubmit.bind(this);\n    this.setAccount = this.setAccount.bind(this);\n    this.state = {\n      cleUri: '',\n      cleName: '',\n      cloName: '',\n      clkName: '',\n      cleImage: {},\n      cloImage: {},\n      clkImage: {},\n      cleDescription: '',\n      cloDescription: '',\n      clkDescription: '',\n      nft: [],\n      loading: false\n    }\n  }\n\n  setAccount=()=>{\n    console.log(\"ciao\");\n  }\n\n  handleCleSubmit(event) {\n    event.preventDefault();\n\n  }\n  render() {\n    let auctionForm\n    if(this.state.loading){\n      content = <p id=\"loader\" classname=\"text-center\">Loading...</p>\n    }else{\n      auctionForm = <Auction/>\n    }\n    let navbar = <Navbar/>\n    return (\n      <div class=\"container\">\n        <Login handleSubmit={this.setAccount.bind(this)} />\n        {navbar}\n        <h2 class=\"mb-5\"> Owned ERC721 </h2>\n        <div class=\"row row-cols-1 row-cols-md-3 mb-3 text-center\">\n          <div class=\"col\">\n            <div class=\"card mb-4 rounded-3 shadow-sm\">\n              <div class=\"card-header py-3\">\n                <h4 class=\"my-0 fw-normal\">{this.state.cleName}</h4>\n              </div>\n              <div class=\"card-body\">\n                <ul class=\"list-unstyled mt-3 mb-4\">\n                  <li>{this.state.cleDescription}</li>\n                  <img src={this.state.cleImage} width=\"250\" height=\"250\"></img>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        {auctionForm}\n      </div>\n    );\n  }\n}\n\nexport default NftList;"]},"metadata":{},"sourceType":"module"}
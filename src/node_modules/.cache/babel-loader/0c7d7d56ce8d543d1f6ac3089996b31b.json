{"ast":null,"code":"var _jsxFileName = \"/Users/mauriziocapone/Desktop/NftMarketplace/nft-market-app/src/App.js\";\nimport React, { useState, Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Login from './Login';\nimport NftList from './NftList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {}\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected.');\n    }\n  }\n\n  async loginForm() {\n    const ownerUser = {\n      email: \"owner@owner.com\",\n      password: \"owner123\"\n    };\n    const [user, setUser] = useState({\n      name: \"\",\n      email: \"\"\n    });\n    const [error, setError] = useState(\"\");\n\n    const Login = details => {\n      console.log(details);\n    };\n\n    const Logout = () => {\n      console.log(\"Logout\");\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.Login = details => {\n      console.log(details);\n    };\n\n    this.state = {\n      loading: true\n    };\n  }\n\n  render() {\n    let content;\n\n    if (this.state.loading) {\n      content = /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"loader\",\n        classname: \"text-center\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    } else {\n      content = /*#__PURE__*/_jsxDEV(Login, {\n        Login: this.Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mauriziocapone/Desktop/NftMarketplace/nft-market-app/src/App.js"],"names":["React","useState","Component","Web3","Navbar","Login","NftList","App","componentWillMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","loginForm","ownerUser","email","password","user","setUser","name","error","setError","details","console","log","Logout","constructor","props","state","loading","render","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAEF,QAAlBM,kBAAkB,GAAE;AACxB,UAAM,KAAKC,QAAL,EAAN;AACA,UAAM,KAAKC,kBAAL,EAAN;AACD;;AAEuB,QAAlBA,kBAAkB,GAAE,CAEzB;;AAEa,QAARD,QAAQ,GAAG;AACf,QAAIE,MAAM,CAACC,QAAX,EAAqB;AACnBD,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAIV,IAAJ,CAASQ,MAAM,CAACC,QAAhB,CAAd;AACA,YAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;AACD,KAHD,MAIK,IAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAIV,IAAJ,CAASQ,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,KAFI,MAGA;AACHJ,MAAAA,MAAM,CAACK,KAAP,CAAa,gCAAb;AACD;AACF;;AAEc,QAATC,SAAS,GAAE;AACf,UAAMC,SAAS,GAAG;AAChBC,MAAAA,KAAK,EAAE,iBADS;AAEhBC,MAAAA,QAAQ,EAAE;AAFM,KAAlB;AAKA,UAAK,CAACC,IAAD,EAAMC,OAAN,IAAiBrB,QAAQ,CAAC;AAACsB,MAAAA,IAAI,EAAE,EAAP;AAAWJ,MAAAA,KAAK,EAAE;AAAlB,KAAD,CAA9B;AACA,UAAK,CAACK,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAjC;;AAEA,UAAMI,KAAK,GAAGqB,OAAO,IAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,KAFD;;AAIA,UAAMG,MAAM,GAAG,MAAM;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,KAFD;AAGD;;AAMDE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAJlB1B,KAIkB,GAJTqB,OAAD,IAAa;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,KAEiB;;AAEhB,SAAKM,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAJ;;AACA,QAAG,KAAKH,KAAL,CAAWC,OAAd,EAAsB;AACpBE,MAAAA,OAAO,gBAAG;AAAG,QAAA,EAAE,EAAC,QAAN;AAAe,QAAA,SAAS,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAV;AACD,KAFD,MAEK;AACHA,MAAAA,OAAO,gBAAG,QAAC,KAAD;AACV,QAAA,KAAK,EAAI,KAAK9B;AADJ;AAAA;AAAA;AAAA;AAAA,cAAV;AAGD;;AACD,wBACI;AAAK,MAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ;AAID;;AAlEyB;;AAqE5B,eAAeE,GAAf","sourcesContent":["import React, { useState,Component } from 'react'\nimport Web3 from 'web3'\nimport './App.css'\nimport Navbar from './Navbar'\nimport Login from './Login'\nimport NftList from './NftList'\n\nclass App extends Component {\n\n  async componentWillMount(){\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData(){\n\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected.')\n    }\n  }\n\n  async loginForm(){\n    const ownerUser = {\n      email: \"owner@owner.com\",\n      password: \"owner123\"\n    }\n  \n    const[user,setUser] = useState({name: \"\", email: \"\"});\n    const[error, setError] = useState(\"\");\n  \n    const Login = details => {\n      console.log(details);\n    }\n  \n    const Logout = () => {\n      console.log(\"Logout\");\n    }\n  }\n\n  Login = (details) => {\n    console.log(details);\n  }\n\n  constructor(props){\n    super(props)\n    this.state = {\n      loading: true\n    }\n  }\n  \n  render() {\n    let content\n    if(this.state.loading){\n      content = <p id=\"loader\" classname=\"text-center\">Loading...</p>\n    }else{\n      content = <Login\n      Login = {this.Login}\n      />\n    }\n    return ( \n        <div class=\"App\">\n        </div> \n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}